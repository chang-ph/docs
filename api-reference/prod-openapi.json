{"openapi": "3.1.0", "info": {"title": "Coinfer Server API", "version": "1.0.0", "description": "\nThis part of document describes the HTTP APIs of the Coinfer cloud.\n\n"}, "paths": {"/base/auth0-config": {"get": {"operationId": "base_api_auth0_config", "summary": "Get Auth0 login configuration", "parameters": [], "responses": {"200": {"description": "OK"}}, "tags": ["Authorization"]}}, "/base/auth0-login": {"post": {"operationId": "base_api_auth0_login", "summary": "Login with Auth0.", "parameters": [], "responses": {"200": {"description": "OK"}}, "description": "Validate the input token with Auth0 API and set up the local user and token if succeded.", "tags": ["Authorization"]}}, "/base/login": {"post": {"operationId": "base_api_user_login", "summary": "Login with password.", "parameters": [], "responses": {"200": {"description": "OK"}}, "tags": ["Authorization"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserLogin"}}}, "required": true}}}, "/base/user": {"get": {"operationId": "base_api_user_info", "summary": "Get information of current user.", "parameters": [], "responses": {"200": {"description": "OK"}}, "tags": ["Authorization"]}, "put": {"operationId": "base_api_modify_current_user", "summary": "Update information of current user.", "parameters": [], "responses": {"200": {"description": "OK"}}, "tags": ["Authorization"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ModifyCurrentUser"}}}, "required": true}}}, "/base/logout": {"post": {"operationId": "base_api_user_logout", "summary": "Logout the system.", "parameters": [], "responses": {"200": {"description": "OK"}}, "tags": ["Authorization"]}}, "/base/user/tokens": {"get": {"operationId": "base_api_get_tokens", "summary": "List all of current user's tokens.", "parameters": [], "responses": {"200": {"description": "OK"}}, "tags": ["Authorization"]}, "post": {"operationId": "base_api_create_token", "summary": "Create a new authorization token.", "parameters": [], "responses": {"200": {"description": "OK"}}, "tags": ["Authorization"], "requestBody": {"content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/CreateToken"}, {"type": "null"}]}}}, "required": false}}}, "/base/user/token/{token_id}": {"put": {"operationId": "base_api_modify_token", "summary": "Update a token by its ID.", "parameters": [{"in": "path", "name": "token_id", "schema": {"title": "Token Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "tags": ["Authorization"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ModifyToken"}}}, "required": true}}, "delete": {"operationId": "base_api_delete_token", "summary": "Delete a token by its ID.", "parameters": [{"in": "path", "name": "token_id", "schema": {"title": "Token Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "tags": ["Authorization"]}}, "/base/changelog": {"get": {"operationId": "base_api_get_changelog", "summary": "Get changelogs of Coinfer.", "parameters": [], "responses": {"200": {"description": "OK"}}, "tags": ["Other"]}}, "/turing/object": {"get": {"operationId": "turing_api_list_models", "summary": "List models.", "parameters": [{"in": "query", "name": "page_no", "schema": {"default": 1, "title": "Page No", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "title": "Page Size", "type": "integer"}, "required": false}, {"in": "query", "name": "model_ids", "schema": {"items": {"type": "string"}, "title": "Model Ids", "type": "array"}, "required": false}, {"in": "query", "name": "with_share_info", "schema": {"default": false, "description": "Whether to return the related share info", "title": "With Share Info", "type": "boolean"}, "required": false, "description": "Whether to return the related share info"}, {"in": "query", "name": "shared_by_me", "schema": {"default": false, "description": "Filter models shared by the current user", "title": "Shared By Me", "type": "boolean"}, "required": false, "description": "Filter models shared by the current user"}, {"in": "query", "name": "shared_with_me", "schema": {"default": false, "description": "Filter models shared with the current user", "title": "Shared With Me", "type": "boolean"}, "required": false, "description": "Filter models shared with the current user"}], "responses": {"200": {"description": "OK"}}, "tags": ["Model"]}, "delete": {"operationId": "turing_api_batch_delete_model", "summary": "Delete models in batch.", "parameters": [{"in": "query", "name": "objids", "schema": {"items": {"type": "string"}, "title": "Objids", "type": "array"}, "required": false}, {"in": "query", "name": "delete_related_experiment", "schema": {"default": false, "title": "Delete Related Experiment", "type": "boolean"}, "required": false}], "responses": {"200": {"description": "OK"}}, "tags": ["Model"]}, "post": {"operationId": "turing_api_create_model", "summary": "Create a new model.", "parameters": [], "responses": {"200": {"description": "OK"}}, "tags": ["Model"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateModel"}}}, "required": true}}}, "/turing/object/{objid}": {"delete": {"operationId": "turing_api_delete_model", "summary": "Delete a model by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "tags": ["Model"]}, "post": {"operationId": "turing_api_update_model", "summary": "Update a model by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "tags": ["Model"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateModel"}}}, "required": true}}, "put": {"operationId": "turing_api_update_model", "summary": "Update a model by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "tags": ["Model"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateModel"}}}, "required": true}}, "get": {"operationId": "turing_api_view_model", "summary": "View a model by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "tags": ["Model"]}}, "/turing/config": {"get": {"operationId": "turing_api_get_config", "summary": "Get configuration about how to run a model.", "parameters": [], "responses": {"200": {"description": "OK"}}, "tags": ["Model"]}}, "/turing/model/{model_id}/share": {"post": {"operationId": "turing_api_create_share", "summary": "Share a model specified by model ID.", "parameters": [{"in": "path", "name": "model_id", "schema": {"title": "Model Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "tags": ["Share"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateShare"}}}, "required": true}}}, "/turing/model/share/{share_id}": {"delete": {"operationId": "turing_api_delete_share", "summary": "Delete model shares.", "parameters": [{"in": "path", "name": "share_id", "schema": {"description": "\"-\"separated share ids", "title": "Share Id", "type": "string"}, "required": true, "description": "\"-\"separated share ids"}], "responses": {"200": {"description": "OK"}}, "description": "\n    Deletion in batch is supported by passing \"-\" separated share ids in the path param.\n    ", "tags": ["Share"]}, "get": {"operationId": "turing_api_get_share", "summary": "Get basic share information of a model sharing.", "parameters": [{"in": "path", "name": "share_id", "schema": {"title": "Share Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": " Returns very basic share information without\n    authorization. Currently it only returns one field\n    `require_password`, which is used when opening a share URL. If\n    `require_password` is true, then a password input box is\n    open. Else the page should be directly displayed.", "tags": ["Share"]}}, "/turing/model/share/{share_id}/info": {"get": {"operationId": "turing_api_get_share", "summary": "Get basic share information of a model sharing.", "parameters": [{"in": "path", "name": "share_id", "schema": {"title": "Share Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": " Returns very basic share information without\n    authorization. Currently it only returns one field\n    `require_password`, which is used when opening a share URL. If\n    `require_password` is true, then a password input box is\n    open. Else the page should be directly displayed.", "tags": ["Share"]}}, "/mcmc/object": {"get": {"operationId": "mcmc_api_list_objects", "summary": "List experiments or data.", "parameters": [{"in": "query", "name": "page_no", "schema": {"default": 1, "title": "Page No", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "title": "Page Size", "type": "integer"}, "required": false}, {"in": "query", "name": "with_share_info", "schema": {"default": false, "description": "Whether to return the related share info", "title": "With Share Info", "type": "boolean"}, "required": false, "description": "Whether to return the related share info"}, {"in": "query", "name": "shared_by_me", "schema": {"default": false, "description": "Filter experiments shared by the current user", "title": "Shared By Me", "type": "boolean"}, "required": false, "description": "Filter experiments shared by the current user"}, {"in": "query", "name": "shared_with_me", "schema": {"default": false, "description": "Filter experiments shared with the current user", "title": "Shared With Me", "type": "boolean"}, "required": false, "description": "Filter experiments shared with the current user"}, {"in": "query", "name": "object_type", "schema": {"default": "experiment", "enum": ["data", "experiment"], "title": "Object Type", "type": "string"}, "required": false}, {"in": "query", "name": "status", "schema": {"default": "", "enum": ["NEW", "RUN", "FIN", "ERR", ""], "title": "Status", "type": "string"}, "required": false}, {"in": "query", "name": "run_on", "schema": {"default": "", "enum": ["Lambda", "Fargate", "Local", ""], "title": "Run On", "type": "string"}, "required": false}, {"in": "query", "name": "has_model", "schema": {"default": "", "enum": ["true", "false", ""], "title": "Has Model", "type": "string"}, "required": false}], "responses": {"200": {"description": "OK"}}, "tags": ["Experiment"]}, "post": {"operationId": "mcmc_api_create_object", "summary": "Create an experiment.", "parameters": [], "responses": {"200": {"description": "OK"}}, "tags": ["Experiment"]}, "delete": {"operationId": "mcmc_api_batch_delete_experiment", "summary": "Delete experiments in batch.", "parameters": [{"in": "query", "name": "objids", "schema": {"items": {"type": "string"}, "title": "Objids", "type": "array"}, "required": false}, {"in": "query", "name": "model_ids", "schema": {"items": {"type": "string"}, "title": "Model Ids", "type": "array"}, "required": false}], "responses": {"200": {"description": "OK"}}, "tags": ["Experiment"]}}, "/mcmc/object/X{objid}": {"get": {"operationId": "mcmc_api_view_xp", "summary": "View an experiment by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}, {"in": "query", "name": "o", "schema": {"default": "None", "title": "O", "type": "string"}, "required": false}, {"in": "query", "name": "log", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Log"}, "required": false}], "responses": {"200": {"description": "OK"}}, "description": "Notice that 'X' is part of the ID.", "tags": ["Experiment"]}, "put": {"operationId": "mcmc_api_update_xp", "summary": "Update an experiment by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Notice that 'X' is part of the ID.", "tags": ["Experiment"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateXP"}}}, "required": true}}, "post": {"operationId": "mcmc_api_update_xp", "summary": "Update an experiment by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Notice that 'X' is part of the ID.", "tags": ["Experiment"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateXP"}}}, "required": true}}, "delete": {"operationId": "mcmc_api_delete_experiment", "summary": "Delete an experiment by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Notice that 'X' is part of the ID.", "tags": ["Experiment"]}}, "/mcmc/object/D{objid}": {"get": {"operationId": "mcmc_api_view_data", "summary": "View a data object by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Notice that 'D' is part of the ID.", "tags": ["Experiment"]}, "put": {"operationId": "mcmc_api_update_data", "summary": "Update a data object by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Notice that 'D' is part of the ID.", "tags": ["Experiment"], "requestBody": {"content": {"multipart/form-data": {"schema": {"title": "MultiPartBodyParams", "type": "object", "properties": {"use": {"default": "main", "title": "Use", "type": "string"}, "fmt": {"title": "Fmt", "type": "string"}, "file": {"format": "binary", "title": "File", "type": "string"}}, "required": ["fmt", "file"]}}}, "required": true}}, "post": {"operationId": "mcmc_api_update_data", "summary": "Update a data object by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Notice that 'D' is part of the ID.", "tags": ["Experiment"], "requestBody": {"content": {"multipart/form-data": {"schema": {"title": "MultiPartBodyParams", "type": "object", "properties": {"use": {"default": "main", "title": "Use", "type": "string"}, "fmt": {"title": "Fmt", "type": "string"}, "file": {"format": "binary", "title": "File", "type": "string"}}, "required": ["fmt", "file"]}}}, "required": true}}, "delete": {"operationId": "mcmc_api_delete_data", "summary": "Delete a data object by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "Notice that 'D' is part of the ID.", "tags": ["Experiment"]}}, "/mcmc/object/{objid}/cloudwatch-logs": {"get": {"operationId": "mcmc_api_view_xp_cloudwatch_logs", "summary": "Get Cloudwatch logs", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": "\n    As logs may contain sensetive info, this api can only be used by admin\n    ", "tags": ["Experiment"]}}, "/mcmc/experiment/{exp_id}/share": {"post": {"operationId": "mcmc_api_create_share", "summary": "Share an experiment.", "parameters": [{"in": "path", "name": "exp_id", "schema": {"title": "Exp Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "tags": ["Share"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateShare"}}}, "required": true}}}, "/mcmc/experiment/share/{share_id}": {"delete": {"operationId": "mcmc_api_delete_share", "summary": "Delete experiment shares.", "parameters": [{"in": "path", "name": "share_id", "schema": {"description": "\"-\"separated share ids", "title": "Share Id", "type": "string"}, "required": true, "description": "\"-\"separated share ids"}], "responses": {"200": {"description": "OK"}}, "description": "\n    Deletion in batch is supported by passing \"-\" separated share ids in the path param.\n    ", "tags": ["Share"]}, "get": {"operationId": "mcmc_api_get_share", "summary": "Get sharing information of an experiment.", "parameters": [{"in": "path", "name": "share_id", "schema": {"title": "Share Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK"}}, "description": " Returns very basic sharing info without any\n    authorization. Currently it only returns one field\n    `require_password`, which is used when opening a share URL. If\n    `require_password` is true, then a password input box is\n    open. Else the page should be directly displayed.  ", "tags": ["Share"]}}}, "components": {"schemas": {"UserLogin": {"properties": {"username": {"title": "Username", "type": "string"}, "password": {"title": "Password", "type": "string"}}, "required": ["username", "password"], "title": "UserLogin", "type": "object"}, "ModifyCurrentUser": {"properties": {"new_password": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "New Password"}, "password": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Password"}}, "title": "ModifyCurrentUser", "type": "object"}, "CreateToken": {"properties": {"name": {"default": "", "title": "Name", "type": "string"}, "desc": {"default": "", "title": "Desc", "type": "string"}, "expire": {"default": "2025-02-13T01:19:31.404295Z", "format": "date-time", "title": "Expire", "type": "string"}}, "title": "CreateToken", "type": "object"}, "ModifyToken": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}, "desc": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Desc"}, "expire": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Expire"}}, "title": "ModifyToken", "type": "object"}, "ListModels": {"properties": {"page_no": {"default": 1, "title": "Page No", "type": "integer"}, "page_size": {"default": 100, "title": "Page Size", "type": "integer"}, "model_ids": {"items": {"type": "string"}, "title": "Model Ids", "type": "array"}, "with_share_info": {"default": false, "description": "Whether to return the related share info", "title": "With Share Info", "type": "boolean"}, "shared_by_me": {"default": false, "description": "Filter models shared by the current user", "title": "Shared By Me", "type": "boolean"}, "shared_with_me": {"default": false, "description": "Filter models shared with the current user", "title": "Shared With Me", "type": "boolean"}}, "title": "ListModels", "type": "object"}, "BatchDeleteModel": {"properties": {"objids": {"items": {"type": "string"}, "title": "Objids", "type": "array"}, "delete_related_experiment": {"default": false, "title": "Delete Related Experiment", "type": "boolean"}}, "title": "BatchDeleteModel", "type": "object"}, "CreateModel": {"properties": {"env": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Env"}, "name": {"title": "Name", "type": "string"}, "content": {"$ref": "#/components/schemas/ModelContent"}}, "required": ["name", "content"], "title": "CreateModel", "type": "object"}, "ModelContent": {"properties": {"meta": {"allOf": [{"$ref": "#/components/schemas/ModelMeta"}]}, "tree": {"items": {"$ref": "#/components/schemas/ModelTreeNode"}, "title": "Tree", "type": "array"}}, "title": "ModelContent", "type": "object"}, "ModelMeta": {"properties": {"project_file": {"default": "Project.toml", "title": "Project File", "type": "string"}, "entrance_file": {"default": "main.jl", "title": "Entrance File", "type": "string"}, "entrance_func": {"default": "model", "title": "Entrance Func", "type": "string"}, "manifest": {"default": "Manifest.toml", "title": "Manifest", "type": "string"}}, "title": "ModelMeta", "type": "object"}, "ModelTreeNode": {"properties": {"name": {"title": "Name", "type": "string"}, "type": {"enum": ["file", "folder"], "title": "Type", "type": "string"}, "content": {"default": "", "title": "Content", "type": "string"}, "children": {"default": [], "items": {"$ref": "#/components/schemas/ModelTreeNode"}, "title": "Children", "type": "array"}}, "required": ["name", "type"], "title": "ModelTreeNode", "type": "object"}, "UpdateModel": {"properties": {"content": {"anyOf": [{"$ref": "#/components/schemas/ModelContent"}, {"type": "null"}]}, "name": {"anyOf": [{"maxLength": 600, "type": "string"}, {"type": "null"}], "title": "Name"}, "version": {"anyOf": [{"maxLength": 32, "type": "string"}, {"type": "null"}], "title": "Version"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "status": {"anyOf": [{"maxLength": 64, "type": "string"}, {"type": "null"}], "title": "Status"}}, "title": "UpdateModel", "type": "object"}, "CreateShare": {"properties": {"password": {"default": "", "title": "Password", "type": "string"}, "target_user": {"default": "", "title": "Target User", "type": "string"}}, "title": "CreateShare", "type": "object"}, "DeleteModelShare": {"properties": {"share_id": {"description": "\"-\"separated share ids", "title": "Share Id", "type": "string"}}, "required": ["share_id"], "title": "DeleteModelShare", "type": "object"}, "ListObject": {"properties": {"page_no": {"default": 1, "title": "Page No", "type": "integer"}, "page_size": {"default": 100, "title": "Page Size", "type": "integer"}, "with_share_info": {"default": false, "description": "Whether to return the related share info", "title": "With Share Info", "type": "boolean"}, "shared_by_me": {"default": false, "description": "Filter experiments shared by the current user", "title": "Shared By Me", "type": "boolean"}, "shared_with_me": {"default": false, "description": "Filter experiments shared with the current user", "title": "Shared With Me", "type": "boolean"}, "object_type": {"default": "experiment", "enum": ["data", "experiment"], "title": "Object Type", "type": "string"}, "status": {"default": "", "enum": ["NEW", "RUN", "FIN", "ERR", ""], "title": "Status", "type": "string"}, "run_on": {"default": "", "enum": ["Lambda", "Fargate", "Local", ""], "title": "Run On", "type": "string"}, "has_model": {"default": "", "enum": ["true", "false", ""], "title": "Has Model", "type": "string"}}, "title": "ListObject", "type": "object"}, "BatchDeleteExperiment": {"properties": {"objids": {"items": {"type": "string"}, "title": "Objids", "type": "array"}, "model_ids": {"items": {"type": "string"}, "title": "Model Ids", "type": "array"}}, "title": "BatchDeleteExperiment", "type": "object"}, "ViewXP": {"properties": {"o": {"default": "None", "title": "O", "type": "string"}, "log": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Log"}}, "title": "ViewXP", "type": "object"}, "UpdateXP": {"properties": {"action": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Action"}, "meta": {"title": "Meta", "type": "object"}, "name": {"anyOf": [{"maxLength": 600, "type": "string"}, {"type": "null"}], "title": "Name"}, "version": {"anyOf": [{"maxLength": 32, "type": "string"}, {"type": "null"}], "title": "Version"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "status": {"anyOf": [{"maxLength": 64, "type": "string"}, {"type": "null"}], "title": "Status"}}, "title": "UpdateXP", "type": "object"}, "UpdateData": {"properties": {"use": {"default": "main", "title": "Use", "type": "string"}, "fmt": {"title": "Fmt", "type": "string"}}, "required": ["fmt"], "title": "UpdateData", "type": "object"}, "DeleteExperimentShare": {"properties": {"share_id": {"description": "\"-\"separated share ids", "title": "Share Id", "type": "string"}}, "required": ["share_id"], "title": "DeleteExperimentShare", "type": "object"}}}, "servers": [], "tags": [{"name": "Authorization", "description": "APIs related to user, token, login, etc."}, {"name": "Model", "description": "APIs related to models."}, {"name": "Experiment", "description": "APIs related to experiments."}, {"name": "Share", "description": "APIs related to model/experiment sharing."}]}