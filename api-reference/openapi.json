{"openapi": "3.1.0", "info": {"title": "Coinfer Server API", "version": "1.0.0", "description": "\nThis part of document describes the HTTP APIs of the Coinfer cloud.\n\n"}, "paths": {"/base/auth0-config": {"get": {"operationId": "base_api_auth0_config", "summary": "Get Auth0 login configuration", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Auth0ConfigRsp_"}}}}}, "description": "Returns the configurations need by the frontend to implement Auth0 login.\nBy using an API to provide this information, we avoid hardcoding them in\nthe frontend code.\n\nThis API doen't need authorization as it is usually called before login.", "tags": ["Authorization"]}}, "/base/auth0-login": {"post": {"operationId": "base_api_auth0_login", "summary": "Login with Auth0.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Auth0LoginRsp_"}}}}}, "description": "This API should be called after the user finishes the Auth0 authorization.\nSo the frontend should be able to obtain an Auth0 token at that point. The\nAPI should be called with this token in the `Authorization` header, in the\nformat like `Authorization: Bearer <token>`.\n\nThe API will call an Auth0 API to query user information with the token. If\nit successfully gets it, it means the token is valid. Then the API will\neither:\n\n1. Retrieve the user object within our system\n2. Create a new user within our system\n\ndepending on whether a user with the same identity exists in our system.\n\nIf everything is okay, the API will return a token which can then be used\nas an identification to call other APIs. The return format is intentionally\ndesigned to keep the same as password login API.", "tags": ["Authorization"]}}, "/base/login": {"post": {"operationId": "base_api_user_login", "summary": "Login with password.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_UserLoginRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Login in with user name and password.\n\nOn success, the return value of the API will be a token which can then be\nused as an identification to call other APIs.", "tags": ["Authorization"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserLogin"}}}, "required": true}}}, "/base/user": {"get": {"operationId": "base_api_user_info", "summary": "Get information of current user.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_UserInfoRsp_"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Returns the information of the current logined user.", "tags": ["Authorization"]}, "put": {"operationId": "base_api_modify_current_user", "summary": "Update information of current user.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_UserInfoRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Modify the property of the current logined user. Currently only login\npassword is supported.", "tags": ["Authorization"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ModifyCurrentUser"}}}, "required": true}, "security": [{"GlobalAuth": []}]}}, "/base/logout": {"post": {"operationId": "base_api_user_logout", "summary": "Logout the system.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_NoneType_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Log out of the system.", "tags": ["Authorization"], "security": [{"GlobalAuth": []}]}}, "/base/user/tokens": {"get": {"operationId": "base_api_get_tokens", "summary": "List all of current user's tokens.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_list_GetTokensRsp__"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Get the tokens of the current user.\n\nIn our system, there are two kinds of tokens:\n\n1. Tokens created explicitly by user.\n2. Tokens created implicitly when a user logs in.\n\nThis API only returns the former. The latter should be seen as\nimplementation detail and be invisible to the user.", "tags": ["Authorization"], "security": [{"GlobalAuth": []}]}, "post": {"operationId": "base_api_create_token", "summary": "Create a new authorization token.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_GetTokensRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "This is where the user explicitly creates a new token. The token can be used\nto call other APIs in the name of the user.", "tags": ["Authorization"], "requestBody": {"content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/CreateToken"}, {"type": "null"}]}}}, "required": false}, "security": [{"GlobalAuth": []}]}}, "/base/user/token/{token_id}": {"put": {"operationId": "base_api_modify_token", "summary": "Update a token by its ID.", "parameters": [{"in": "path", "name": "token_id", "schema": {"title": "Token Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_GetTokensRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Modify various property of a token.", "tags": ["Authorization"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ModifyToken"}}}, "required": true}, "security": [{"GlobalAuth": []}]}, "delete": {"operationId": "base_api_delete_token", "summary": "Delete a token by its ID.", "parameters": [{"in": "path", "name": "token_id", "schema": {"title": "Token Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_NoneType_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Delete(invalidate) a token.", "tags": ["Authorization"], "security": [{"GlobalAuth": []}]}}, "/base/changelog": {"get": {"operationId": "base_api_get_changelog", "summary": "Get changelogs of Coinfer.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_GetChangelogRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Get the change log hosted in notion.", "tags": ["Other"]}}, "/base/update": {"post": {"operationId": "base_api_update", "summary": "Update current user or a token", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Union_UserInfoRsp__GetTokensRsp__"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "This API is multi-functional. It can:\n1. update the data of the current user\n2. update the data of a specific token\n\nBecause of this, it support different set of parameters, discrimated by the \"type\" field:\n\n```js\n{\"payload\": {\"type\": \"update_user\", ...}}\n// or\n{\"payload\": {\"type\": \"update_token\", ...}}\n```", "tags": ["Authorization"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateBase"}}}, "required": true}, "security": [{"GlobalAuth": []}]}}, "/turing/object": {"get": {"operationId": "turing_api_list_models", "summary": "List models.", "parameters": [{"in": "query", "name": "page_no", "schema": {"default": 1, "title": "Page No", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "title": "Page Size", "type": "integer"}, "required": false}, {"in": "query", "name": "model_ids", "schema": {"items": {"type": "string"}, "title": "Model Ids", "type": "array"}, "required": false}, {"in": "query", "name": "with_share_info", "schema": {"default": false, "description": "Whether to return the related share info", "title": "With Share Info", "type": "boolean"}, "required": false, "description": "Whether to return the related share info"}, {"in": "query", "name": "shared_by_me", "schema": {"default": false, "description": "Filter models shared by the current user", "title": "Shared By Me", "type": "boolean"}, "required": false, "description": "Filter models shared by the current user"}, {"in": "query", "name": "shared_with_me", "schema": {"default": false, "description": "Filter models shared with the current user", "title": "Shared With Me", "type": "boolean"}, "required": false, "description": "Filter models shared with the current user"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListingRsp_ListModelsRspItem_"}}}}}, "tags": ["Model"], "security": [{"GlobalAuth": []}]}, "delete": {"operationId": "turing_api_batch_delete_model", "summary": "Delete models in batch.", "parameters": [{"in": "query", "name": "objids", "schema": {"items": {"type": "string"}, "minItems": 1, "title": "Objids", "type": "array"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_NoneType_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "tags": ["Model"], "security": [{"GlobalAuth": []}]}, "post": {"operationId": "turing_api_create_model", "summary": "Create a new model.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_ListModelsRspItem_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "tags": ["Model"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateModel"}}}, "required": true}, "security": [{"GlobalAuth": []}]}}, "/turing/object/{objid}": {"post": {"operationId": "turing_api_update_model", "summary": "Update a model by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_ListModelsRspItem_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "tags": ["Model"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateModel"}}}, "required": true}, "security": [{"GlobalAuth": []}]}, "get": {"operationId": "turing_api_view_model", "summary": "View a model by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_ViewModelsRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "tags": ["Model"], "security": [{"SharingAuth": []}]}}, "/turing/object/{objid}/share/{share_id}": {"get": {"operationId": "turing_api_view_shared_model", "summary": "View share snapshot of a model", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}, {"in": "path", "name": "share_id", "schema": {"title": "Share Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_ViewModelsRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "\nView the snapshot of a model which is created when creating the share.\nThe snapshot is assured to remain unchanged even when the model undergoes modifications.\nThis guarantees that discussions regarding shared resources among users are grounded in a solid foundation.\n", "tags": ["Model"], "security": [{"SharingAuth": []}]}}, "/turing/config": {"get": {"operationId": "turing_api_get_config", "summary": "Get configuration about how to run a model.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_GetConfigRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "tags": ["Model"], "security": [{"GlobalAuth": []}]}}, "/turing/model/{model_id}/share": {"post": {"operationId": "turing_api_create_model_share", "summary": "Share a model specified by model ID.", "parameters": [{"in": "path", "name": "model_id", "schema": {"title": "Model Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_CreateModelShareRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "tags": ["Share"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateModelShare"}}}, "required": true}, "security": [{"GlobalAuth": []}]}}, "/turing/model/share/{share_id}": {"delete": {"operationId": "turing_api_delete_model_share", "summary": "Delete model shares.", "parameters": [{"in": "path", "name": "share_id", "schema": {"description": "\"-\"separated share ids", "title": "Share Id", "type": "string"}, "required": true, "description": "\"-\"separated share ids"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_NoneType_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "\n    Deletion in batch is supported by passing \"-\" separated share ids in the path param.\n    ", "tags": ["Share"], "security": [{"GlobalAuth": []}]}, "get": {"operationId": "turing_api_get_model_share", "summary": "Get basic share information of a model sharing.", "parameters": [{"in": "path", "name": "share_id", "schema": {"title": "Share Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_GetModelShareRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": " Returns very basic share information without\n    authorization. Currently it only returns one field\n    `require_password`, which is used when opening a share URL. If\n    `require_password` is true, then a password input box is\n    open. Else the page should be directly displayed.", "tags": ["Share"]}}, "/mcmc/object": {"get": {"operationId": "mcmc_api_list_objects", "summary": "List experiments or data.", "parameters": [{"in": "query", "name": "page_no", "schema": {"default": 1, "title": "Page No", "type": "integer"}, "required": false}, {"in": "query", "name": "page_size", "schema": {"default": 100, "title": "Page Size", "type": "integer"}, "required": false}, {"in": "query", "name": "with_share_info", "schema": {"default": false, "description": "Whether to return the related share info", "title": "With Share Info", "type": "boolean"}, "required": false, "description": "Whether to return the related share info"}, {"in": "query", "name": "shared_by_me", "schema": {"default": false, "description": "Filter experiments shared by the current user", "title": "Shared By Me", "type": "boolean"}, "required": false, "description": "Filter experiments shared by the current user"}, {"in": "query", "name": "shared_with_me", "schema": {"default": false, "description": "Filter experiments shared with the current user", "title": "Shared With Me", "type": "boolean"}, "required": false, "description": "Filter experiments shared with the current user"}, {"in": "query", "name": "object_type", "schema": {"default": "experiment", "enum": ["data", "experiment"], "title": "Object Type", "type": "string"}, "required": false}, {"in": "query", "name": "status", "schema": {"default": "", "enum": ["NEW", "RUN", "FIN", "ERR", ""], "title": "Status", "type": "string"}, "required": false}, {"in": "query", "name": "run_on", "schema": {"default": "", "enum": ["Lambda", "Fargate", "Local", ""], "title": "Run On", "type": "string"}, "required": false}, {"in": "query", "name": "has_model", "schema": {"default": "", "enum": ["true", "false", ""], "title": "Has Model", "type": "string"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListingRsp_ListObjectRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "tags": ["Experiment"], "security": [{"GlobalAuth": []}]}, "post": {"operationId": "mcmc_api_create_object", "summary": "Create an experiment.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Any_"}}}}}, "tags": ["Experiment"], "security": [{"GlobalAuth": []}]}, "delete": {"operationId": "mcmc_api_batch_delete_experiment", "summary": "Delete experiments in batch.", "parameters": [{"in": "query", "name": "objids", "schema": {"items": {"type": "string"}, "title": "Objids", "type": "array"}, "required": false}, {"in": "query", "name": "model_ids", "schema": {"items": {"type": "string"}, "title": "Model Ids", "type": "array"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_NoneType_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "tags": ["Experiment"], "security": [{"GlobalAuth": []}]}}, "/mcmc/object/X{objid}": {"get": {"operationId": "mcmc_api_view_experiment", "summary": "View an experiment by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}, {"in": "query", "name": "o", "schema": {"default": "None", "title": "O", "type": "string"}, "required": false}, {"in": "query", "name": "log", "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Log"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Any_"}}}}}, "description": "Notice that 'X' is part of the ID.", "tags": ["Experiment"], "security": [{"SharingAuth": []}]}, "post": {"operationId": "mcmc_api_update_experiment", "summary": "Update an experiment by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Any_"}}}}}, "description": "Notice that 'X' is part of the ID.", "tags": ["Experiment"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateXP"}}}, "required": true}, "security": [{"GlobalAuth": []}]}}, "/mcmc/object/D{objid}": {"get": {"operationId": "mcmc_api_view_data", "summary": "View a data object by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Any_"}}}}}, "description": "Notice that 'D' is part of the ID.", "tags": ["Experiment"], "security": [{"GlobalAuth": []}]}, "post": {"operationId": "mcmc_api_update_data", "summary": "Update a data object by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Any_"}}}}}, "description": "Notice that 'D' is part of the ID.", "tags": ["Experiment"], "requestBody": {"content": {"multipart/form-data": {"schema": {"title": "MultiPartBodyParams", "type": "object", "properties": {"use": {"default": "main", "title": "Use", "type": "string"}, "fmt": {"title": "Fmt", "type": "string"}, "file": {"format": "binary", "title": "File", "type": "string"}}, "required": ["fmt", "file"]}}}, "required": true}, "security": [{"GlobalAuth": []}]}, "delete": {"operationId": "mcmc_api_delete_data", "summary": "Delete a data object by its ID.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_NoneType_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Notice that 'D' is part of the ID.", "tags": ["Experiment"], "security": [{"GlobalAuth": []}]}}, "/mcmc/object/{objid}/cloudwatch-logs": {"get": {"operationId": "mcmc_api_view_xp_cloudwatch_logs", "summary": "Get Cloudwatch logs", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_ViewCloudwatchLogsRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "\n    As logs may contain sensetive info, this api can only be used by admin\n    ", "tags": ["Experiment"], "security": [{"GlobalAuth": []}]}}, "/mcmc/experiment/{exp_id}/share": {"post": {"operationId": "mcmc_api_create_experiment_share", "summary": "Share an experiment.", "parameters": [{"in": "path", "name": "exp_id", "schema": {"title": "Exp Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_CreateExperimentShareRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "tags": ["Share"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateExperimentShare"}}}, "required": true}, "security": [{"GlobalAuth": []}]}}, "/mcmc/experiment/share/{share_id}": {"delete": {"operationId": "mcmc_api_delete_experiment_share", "summary": "Delete experiment shares.", "parameters": [{"in": "path", "name": "share_id", "schema": {"description": "\"-\"separated share ids", "title": "Share Id", "type": "string"}, "required": true, "description": "\"-\"separated share ids"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_NoneType_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "\n    Deletion in batch is supported by passing \"-\" separated share ids in the path param.\n    ", "tags": ["Share"], "security": [{"GlobalAuth": []}]}, "get": {"operationId": "mcmc_api_get_experiment_share", "summary": "Get sharing information of an experiment.", "parameters": [{"in": "path", "name": "share_id", "schema": {"title": "Share Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_GetExperimentShareRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": " Returns very basic sharing info without any\n    authorization. Currently it only returns one field\n    `require_password`, which is used when opening a share URL. If\n    `require_password` is true, then a password input box is\n    open. Else the page should be directly displayed.  ", "tags": ["Share"]}}}, "components": {"schemas": {"Auth0ConfigRsp": {"properties": {"Domain": {"title": "Domain", "type": "string"}, "ClientID": {"title": "Clientid", "type": "string"}}, "required": ["Domain", "ClientID"], "title": "Auth0ConfigRsp", "type": "object"}, "SuccRsp_Auth0ConfigRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/Auth0ConfigRsp"}}, "required": ["status", "data"], "title": "SuccRsp[Auth0ConfigRsp]", "type": "object"}, "Auth0LoginRsp": {"properties": {"tokens": {"items": {"type": "string"}, "title": "Tokens", "type": "array"}}, "required": ["tokens"], "title": "Auth0LoginRsp", "type": "object"}, "SuccRsp_Auth0LoginRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/Auth0LoginRsp"}}, "required": ["status", "data"], "title": "SuccRsp[Auth0LoginRsp]", "type": "object"}, "SuccRsp_UserLoginRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/UserLoginRsp"}}, "required": ["status", "data"], "title": "SuccRsp[UserLoginRsp]", "type": "object"}, "UserLoginRsp": {"properties": {"tokens": {"items": {"type": "string"}, "title": "Tokens", "type": "array"}}, "required": ["tokens"], "title": "UserLoginRsp", "type": "object"}, "ErrRsp": {"properties": {"status": {"const": "error", "title": "Status"}, "code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["status", "code", "message"], "title": "ErrRsp", "type": "object"}, "UserLogin": {"properties": {"username": {"title": "Username", "type": "string"}, "password": {"title": "Password", "type": "string"}}, "required": ["username", "password"], "title": "UserLogin", "type": "object"}, "SuccRsp_UserInfoRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/UserInfoRsp"}}, "required": ["status", "data"], "title": "SuccRsp[UserInfoRsp]", "type": "object"}, "UserInfoRsp": {"properties": {"id": {"title": "Id", "type": "integer"}, "username": {"title": "Username", "type": "string"}, "super": {"title": "Super", "type": "boolean"}, "roles": {"items": {"type": "string"}, "title": "Roles", "type": "array"}}, "required": ["id", "username", "super", "roles"], "title": "UserInfoRsp", "type": "object"}, "ModifyCurrentUser": {"properties": {"new_password": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "New Password"}, "password": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Password"}}, "title": "ModifyCurrentUser", "type": "object"}, "SuccRsp_NoneType_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"title": "Data", "type": "null"}}, "required": ["status", "data"], "title": "SuccRsp[NoneType]", "type": "object"}, "GetTokensRsp": {"properties": {"id": {"title": "Id", "type": "integer"}, "token": {"title": "Token", "type": "string"}, "token_name": {"title": "Token Name", "type": "string"}, "token_desc": {"title": "Token Desc", "type": "string"}, "token_expire": {"examples": ["2025-02-11T23:56:09.473Z"], "format": "date-time", "title": "Token Expire", "type": "string"}}, "required": ["id", "token", "token_name", "token_desc", "token_expire"], "title": "GetTokensRsp", "type": "object"}, "SuccRsp_list_GetTokensRsp__": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"items": {"$ref": "#/components/schemas/GetTokensRsp"}, "title": "Data", "type": "array"}}, "required": ["status", "data"], "title": "SuccRsp[list[GetTokensRsp]]", "type": "object"}, "SuccRsp_GetTokensRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/GetTokensRsp"}}, "required": ["status", "data"], "title": "SuccRsp[GetTokensRsp]", "type": "object"}, "CreateToken": {"properties": {"name": {"default": "", "title": "Name", "type": "string"}, "desc": {"default": "", "title": "Desc", "type": "string"}, "expire": {"default": "2025-03-07T09:54:42.083350Z", "format": "date-time", "title": "Expire", "type": "string"}}, "title": "CreateToken", "type": "object"}, "ModifyToken": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}, "desc": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Desc"}, "expire": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Expire"}}, "title": "ModifyToken", "type": "object"}, "GetChangelogRsp": {"properties": {"date": {"description": "The time of the changelog", "examples": ["2025-01-10"], "title": "Date", "type": "string"}, "content": {"description": "The content of the change log. Each item in the list is a paragraph.", "items": {"type": "string"}, "title": "Content", "type": "array"}}, "required": ["date", "content"], "title": "GetChangelogRsp", "type": "object"}, "SuccRsp_GetChangelogRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/GetChangelogRsp"}}, "required": ["status", "data"], "title": "SuccRsp[GetChangelogRsp]", "type": "object"}, "SuccRsp_Union_UserInfoRsp__GetTokensRsp__": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"anyOf": [{"$ref": "#/components/schemas/UserInfoRsp"}, {"$ref": "#/components/schemas/GetTokensRsp"}], "title": "Data"}}, "required": ["status", "data"], "title": "SuccRsp[Union[UserInfoRsp, GetTokensRsp]]", "type": "object"}, "ModifyCurrentUserNew": {"properties": {"type": {"const": "update_user", "default": "update_user", "title": "Type"}, "new_password": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "New Password"}, "password": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Password"}}, "title": "ModifyCurrentUserNew", "type": "object"}, "ModifyTokenNew": {"properties": {"type": {"const": "update_token", "default": "update_token", "title": "Type"}, "id": {"title": "Id", "type": "integer"}, "name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}, "desc": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Desc"}, "expire": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Expire"}}, "required": ["id"], "title": "ModifyTokenNew", "type": "object"}, "UpdateBase": {"properties": {"payload": {"discriminator": {"mapping": {"update_token": "#/components/schemas/ModifyTokenNew", "update_user": "#/components/schemas/ModifyCurrentUserNew"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/components/schemas/ModifyCurrentUserNew"}, {"$ref": "#/components/schemas/ModifyTokenNew"}], "title": "Payload"}}, "required": ["payload"], "title": "UpdateBase", "type": "object"}, "ListModels": {"properties": {"page_no": {"default": 1, "title": "Page No", "type": "integer"}, "page_size": {"default": 100, "title": "Page Size", "type": "integer"}, "model_ids": {"items": {"type": "string"}, "title": "Model Ids", "type": "array"}, "with_share_info": {"default": false, "description": "Whether to return the related share info", "title": "With Share Info", "type": "boolean"}, "shared_by_me": {"default": false, "description": "Filter models shared by the current user", "title": "Shared By Me", "type": "boolean"}, "shared_with_me": {"default": false, "description": "Filter models shared with the current user", "title": "Shared With Me", "type": "boolean"}}, "title": "ListModels", "type": "object"}, "ListModelsRspItem": {"properties": {"id": {"title": "Id", "type": "integer"}, "short_id": {"title": "Short Id", "type": "string"}, "name": {"title": "Name", "type": "string"}, "env": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Env"}, "share_info": {"anyOf": [{"items": {"$ref": "#/components/schemas/ShareInfoModel"}, "type": "array"}, {"type": "null"}], "title": "Share Info"}, "content": {"title": "Content"}}, "required": ["id", "short_id", "name", "env"], "title": "ListModelsRspItem", "type": "object"}, "ListingRspData_ListModelsRspItem_": {"properties": {"total": {"title": "Total", "type": "integer"}, "page": {"title": "Page", "type": "integer"}, "count_per_page": {"title": "Count Per Page", "type": "integer"}, "objects": {"items": {"$ref": "#/components/schemas/ListModelsRspItem"}, "title": "Objects", "type": "array"}}, "required": ["total", "page", "count_per_page", "objects"], "title": "ListingRspData[ListModelsRspItem]", "type": "object"}, "ListingRsp_ListModelsRspItem_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/ListingRspData_ListModelsRspItem_"}}, "required": ["status", "data"], "title": "ListingRsp[ListModelsRspItem]", "type": "object"}, "ShareInfoModel": {"properties": {"id": {"title": "Id", "type": "string"}, "password": {"title": "Password", "type": "string"}, "user_id": {"title": "User Id", "type": "string"}, "to_user_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "To User Id"}}, "required": ["id", "password", "user_id"], "title": "ShareInfoModel", "type": "object"}, "BatchDeleteModel": {"properties": {"objids": {"items": {"type": "string"}, "minItems": 1, "title": "Objids", "type": "array"}}, "title": "BatchDeleteModel", "type": "object"}, "SuccRsp_ListModelsRspItem_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/ListModelsRspItem"}}, "required": ["status", "data"], "title": "SuccRsp[ListModelsRspItem]", "type": "object"}, "CreateModel": {"properties": {"env": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Env"}, "name": {"title": "Name", "type": "string"}, "content": {"$ref": "#/components/schemas/ModelContent"}}, "required": ["name", "content"], "title": "CreateModel", "type": "object"}, "ModelContent": {"properties": {"meta": {"allOf": [{"$ref": "#/components/schemas/ModelMeta"}]}, "tree": {"items": {"$ref": "#/components/schemas/ModelTreeNode"}, "title": "Tree", "type": "array"}}, "title": "ModelContent", "type": "object"}, "ModelMeta": {"properties": {"project_file": {"default": "Project.toml", "title": "Project File", "type": "string"}, "entrance_file": {"default": "main.jl", "title": "Entrance File", "type": "string"}, "entrance_func": {"default": "model", "title": "Entrance Func", "type": "string"}, "manifest": {"default": "Manifest.toml", "title": "Manifest", "type": "string"}}, "title": "ModelMeta", "type": "object"}, "ModelTreeNode": {"properties": {"name": {"title": "Name", "type": "string"}, "type": {"enum": ["file", "folder"], "title": "Type", "type": "string"}, "content": {"default": "", "title": "Content", "type": "string"}, "children": {"default": [], "items": {"$ref": "#/components/schemas/ModelTreeNode"}, "title": "Children", "type": "array"}}, "required": ["name", "type"], "title": "ModelTreeNode", "type": "object"}, "UpdateModel": {"properties": {"content": {"anyOf": [{"$ref": "#/components/schemas/ModelContent"}, {"type": "null"}]}, "name": {"anyOf": [{"maxLength": 600, "type": "string"}, {"type": "null"}], "title": "Name"}, "version": {"anyOf": [{"maxLength": 32, "type": "string"}, {"type": "null"}], "default": "0.1", "title": "Version"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "status": {"anyOf": [{"maxLength": 64, "type": "string"}, {"type": "null"}], "title": "Status"}}, "title": "UpdateModel", "type": "object"}, "SuccRsp_ViewModelsRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/ViewModelsRsp"}}, "required": ["status", "data"], "title": "SuccRsp[ViewModelsRsp]", "type": "object"}, "ViewModelShareInfo": {"properties": {"id": {"title": "Id", "type": "integer"}, "public": {"title": "Public", "type": "boolean"}}, "required": ["id", "public"], "title": "ViewModelShareInfo", "type": "object"}, "ViewModelsRsp": {"properties": {"id": {"title": "Id", "type": "integer"}, "short_id": {"title": "Short Id", "type": "string"}, "name": {"title": "Name", "type": "string"}, "env": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Env"}, "share_info": {"anyOf": [{"items": {"$ref": "#/components/schemas/ViewModelShareInfo"}, "type": "array"}, {"type": "null"}], "title": "Share Info"}, "content": {"title": "Content"}}, "required": ["id", "short_id", "name", "env"], "title": "ViewModelsRsp", "type": "object"}, "GetConfigRsp": {"properties": {"run_model_url": {"title": "Run Model Url", "type": "string"}}, "required": ["run_model_url"], "title": "GetConfigRsp", "type": "object"}, "SuccRsp_GetConfigRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/GetConfigRsp"}}, "required": ["status", "data"], "title": "SuccRsp[GetConfigRsp]", "type": "object"}, "CreateModelShareRsp": {"properties": {"id": {"title": "Id", "type": "integer"}, "model_id": {"title": "Model Id", "type": "string"}, "model_name": {"title": "Model Name", "type": "string"}, "password": {"title": "Password", "type": "string"}, "created_at": {"format": "date-time", "title": "Created At", "type": "string"}, "from_user": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "From User"}, "to_user": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "To User"}}, "required": ["id", "model_id", "model_name", "password", "created_at"], "title": "CreateModelShareRsp", "type": "object"}, "SuccRsp_CreateModelShareRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/CreateModelShareRsp"}}, "required": ["status", "data"], "title": "SuccRsp[CreateModelShareRsp]", "type": "object"}, "CreateModelShare": {"properties": {"password": {"default": "", "title": "Password", "type": "string"}, "target_user": {"default": "", "title": "Target User", "type": "string"}}, "title": "CreateModelShare", "type": "object"}, "DeleteModelShare": {"properties": {"share_id": {"description": "\"-\"separated share ids", "title": "Share Id", "type": "string"}}, "required": ["share_id"], "title": "DeleteModelShare", "type": "object"}, "GetModelShareRsp": {"properties": {"require_password": {"title": "Require Password", "type": "boolean"}}, "required": ["require_password"], "title": "GetModelShareRsp", "type": "object"}, "SuccRsp_GetModelShareRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/GetModelShareRsp"}}, "required": ["status", "data"], "title": "SuccRsp[GetModelShareRsp]", "type": "object"}, "ListObject": {"properties": {"page_no": {"default": 1, "title": "Page No", "type": "integer"}, "page_size": {"default": 100, "title": "Page Size", "type": "integer"}, "with_share_info": {"default": false, "description": "Whether to return the related share info", "title": "With Share Info", "type": "boolean"}, "shared_by_me": {"default": false, "description": "Filter experiments shared by the current user", "title": "Shared By Me", "type": "boolean"}, "shared_with_me": {"default": false, "description": "Filter experiments shared with the current user", "title": "Shared With Me", "type": "boolean"}, "object_type": {"default": "experiment", "enum": ["data", "experiment"], "title": "Object Type", "type": "string"}, "status": {"default": "", "enum": ["NEW", "RUN", "FIN", "ERR", ""], "title": "Status", "type": "string"}, "run_on": {"default": "", "enum": ["Lambda", "Fargate", "Local", ""], "title": "Run On", "type": "string"}, "has_model": {"default": "", "enum": ["true", "false", ""], "title": "Has Model", "type": "string"}}, "title": "ListObject", "type": "object"}, "ListObjectRsp": {"properties": {"short_id": {"title": "Short Id", "type": "string"}, "name": {"title": "Name", "type": "string"}, "model_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Model Id"}, "status": {"title": "Status", "type": "string"}, "meta": {"anyOf": [{"$ref": "#/components/schemas/MetaModel"}, {"type": "null"}]}, "n_chains": {"title": "N Chains", "type": "integer"}, "n_variables": {"title": "N Variables", "type": "integer"}, "n_samples": {"title": "N Samples", "type": "integer"}, "sample_update_time": {"format": "date-time", "title": "Sample Update Time", "type": "string"}, "run_on": {"title": "Run On", "type": "string"}, "share_info": {"anyOf": [{"items": {"$ref": "#/components/schemas/ShareInfoModel"}, "type": "array"}, {"type": "null"}], "title": "Share Info"}, "model_name": {"title": "Model Name", "type": "string"}}, "required": ["short_id", "name", "status", "n_chains", "n_variables", "n_samples", "sample_update_time", "run_on", "model_name"], "title": "ListObjectRsp", "type": "object"}, "ListingRspData_ListObjectRsp_": {"properties": {"total": {"title": "Total", "type": "integer"}, "page": {"title": "Page", "type": "integer"}, "count_per_page": {"title": "Count Per Page", "type": "integer"}, "objects": {"items": {"$ref": "#/components/schemas/ListObjectRsp"}, "title": "Objects", "type": "array"}}, "required": ["total", "page", "count_per_page", "objects"], "title": "ListingRspData[ListObjectRsp]", "type": "object"}, "ListingRsp_ListObjectRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/ListingRspData_ListObjectRsp_"}}, "required": ["status", "data"], "title": "ListingRsp[ListObjectRsp]", "type": "object"}, "MetaModel": {"properties": {"action": {"default": "", "title": "Action", "type": "string"}, "iteration_count": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Iteration Count"}}, "title": "MetaModel", "type": "object"}, "SuccRsp_Any_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"title": "Data"}}, "required": ["status", "data"], "title": "SuccRsp[Any]", "type": "object"}, "BatchDeleteExperiment": {"properties": {"objids": {"items": {"type": "string"}, "title": "Objids", "type": "array"}, "model_ids": {"items": {"type": "string"}, "title": "Model Ids", "type": "array"}}, "title": "BatchDeleteExperiment", "type": "object"}, "ViewXP": {"properties": {"o": {"default": "None", "title": "O", "type": "string"}, "log": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Log"}}, "title": "ViewXP", "type": "object"}, "UpdateXP": {"properties": {"action": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Action"}, "meta": {"title": "Meta", "type": "object"}, "name": {"anyOf": [{"maxLength": 600, "type": "string"}, {"type": "null"}], "title": "Name"}, "version": {"anyOf": [{"maxLength": 32, "type": "string"}, {"type": "null"}], "default": "0.1", "title": "Version"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "status": {"anyOf": [{"maxLength": 64, "type": "string"}, {"type": "null"}], "title": "Status"}}, "title": "UpdateXP", "type": "object"}, "UpdateData": {"properties": {"use": {"default": "main", "title": "Use", "type": "string"}, "fmt": {"title": "Fmt", "type": "string"}}, "required": ["fmt"], "title": "UpdateData", "type": "object"}, "SuccRsp_ViewCloudwatchLogsRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/ViewCloudwatchLogsRsp"}}, "required": ["status", "data"], "title": "SuccRsp[ViewCloudwatchLogsRsp]", "type": "object"}, "ViewCloudwatchLogsRsp": {"properties": {"logs": {"items": {"maxItems": 2, "minItems": 2, "prefixItems": [{"type": "integer"}, {"type": "string"}], "type": "array"}, "title": "Logs", "type": "array"}}, "required": ["logs"], "title": "ViewCloudwatchLogsRsp", "type": "object"}, "CreateExperimentShareRsp": {"properties": {"id": {"title": "Id", "type": "integer"}, "user_id": {"title": "User Id", "type": "integer"}, "experiment_id": {"title": "Experiment Id", "type": "string"}, "experiment_name": {"title": "Experiment Name", "type": "string"}, "password": {"title": "Password", "type": "string"}, "created_at": {"format": "date-time", "title": "Created At", "type": "string"}, "from_user": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "From User"}, "to_user": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "To User"}}, "required": ["id", "user_id", "experiment_id", "experiment_name", "password", "created_at"], "title": "CreateExperimentShareRsp", "type": "object"}, "SuccRsp_CreateExperimentShareRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/CreateExperimentShareRsp"}}, "required": ["status", "data"], "title": "SuccRsp[CreateExperimentShareRsp]", "type": "object"}, "CreateExperimentShare": {"properties": {"password": {"default": "", "title": "Password", "type": "string"}, "target_user": {"default": "", "title": "Target User", "type": "string"}}, "title": "CreateExperimentShare", "type": "object"}, "DeleteExperimentShare": {"properties": {"share_id": {"description": "\"-\"separated share ids", "title": "Share Id", "type": "string"}}, "required": ["share_id"], "title": "DeleteExperimentShare", "type": "object"}, "GetExperimentShareRsp": {"properties": {"require_password": {"title": "Require Password", "type": "boolean"}}, "required": ["require_password"], "title": "GetExperimentShareRsp", "type": "object"}, "SuccRsp_GetExperimentShareRsp_": {"properties": {"status": {"const": "ok", "title": "Status"}, "data": {"$ref": "#/components/schemas/GetExperimentShareRsp"}}, "required": ["status", "data"], "title": "SuccRsp[GetExperimentShareRsp]", "type": "object"}}, "securitySchemes": {"GlobalAuth": {"type": "http", "scheme": "bearer"}, "SharingAuth": {"type": "http", "scheme": "bearer"}}}, "servers": [{"url": "https://api.coinfer.ai", "description": "The production environment"}, {"url": "https://dev.coinfer.ai", "description": "The development environment"}], "tags": [{"name": "Authorization", "description": "APIs related to user, token, login, etc."}, {"name": "Model", "description": "APIs related to models."}, {"name": "Experiment", "description": "APIs related to experiments."}, {"name": "Share", "description": "APIs related to model/experiment sharing."}]}