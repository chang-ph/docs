{"openapi": "3.1.0", "info": {"title": "Coinfer Server API", "version": "0.0.1755128987+d59ee80", "description": "\nThis part of document describes the HTTP APIs of the Coinfer cloud.\n\n"}, "paths": {"/base/auth0-config": {"get": {"operationId": "coinfer_apis_base_api_auth0_config", "summary": "Get Auth0 login configuration", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Auth0ConfigRsp_"}}}}}, "description": "Returns the configurations need by the frontend to implement Auth0 login.\nBy using an API to provide this information, we avoid hardcoding them in\nthe frontend code.\n\nThis API doen't need authorization as it is usually called before login.", "tags": ["Authorization"]}}, "/base/auth0-login": {"post": {"operationId": "coinfer_apis_base_api_auth0_login", "summary": "Login with Auth0.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Auth0LoginRsp_"}}}}}, "description": "This API should be called after the user finishes the Auth0 authorization.\nSo the frontend should be able to obtain an Auth0 token at that point. The\nAPI should be called with this token in the `Authorization` header, in the\nformat like `Authorization: Bearer <token>`.\n\nThe API will call an Auth0 API to query user information with the token. If\nit successfully gets it, it means the token is valid. Then the API will\neither:\n\n1. Retrieve the user object within our system\n2. Create a new user within our system\n\ndepending on whether a user with the same identity exists in our system.\n\nIf everything is okay, the API will return a token which can then be used\nas an identification to call other APIs. The return format is intentionally\ndesigned to keep the same as password login API.", "tags": ["Authorization"]}}, "/base/login": {"post": {"operationId": "coinfer_apis_base_api_user_login", "summary": "Login with password.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_UserLoginRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Login in with user name and password.\n\nOn success, the return value of the API will be a token which can then be\nused as an identification to call other APIs.", "tags": ["Authorization"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserLogin"}}}, "required": true}}}, "/base/user": {"get": {"operationId": "coinfer_apis_base_api_user_info", "summary": "Get information of current user.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_UserInfoRsp_"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Returns the information of the current logined user.", "tags": ["Authorization"], "security": [{"GlobalAuth": []}]}, "put": {"operationId": "coinfer_apis_base_api_modify_current_user", "summary": "Update information of current user.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_UserInfoRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Modify the property of the current logined user. Currently only login\npassword is supported.", "tags": ["Authorization"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ModifyCurrentUser"}}}, "required": true}, "security": [{"GlobalAuth": []}]}}, "/base/logout": {"post": {"operationId": "coinfer_apis_base_api_user_logout", "summary": "Logout the system.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_NoneType_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Log out of the system.", "tags": ["Authorization"], "security": [{"GlobalAuth": []}]}}, "/base/user/tokens": {"get": {"operationId": "coinfer_apis_base_api_get_tokens", "summary": "List all of current user's tokens.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_list_GetTokensRsp__"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Get the tokens created by the current user.\n\nIn our system, there are two kinds of tokens:\n\n1. Tokens created explicitly by user.\n2. Tokens created implicitly when a user logs in.\n\nThis API only returns the former. The latter should be seen as\nimplementation detail and be invisible to the user.", "tags": ["Authorization"], "security": [{"GlobalAuth": []}]}, "post": {"operationId": "coinfer_apis_base_api_create_token", "summary": "Create a new authorization token.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_GetTokensRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "This is where the user explicitly creates a new token. The token can be used\nto call other APIs in the name of the user.", "tags": ["Authorization"], "requestBody": {"content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/CreateToken"}, {"type": "null"}]}}}, "required": false}, "security": [{"GlobalAuth": []}]}, "delete": {"operationId": "coinfer_apis_base_api_delete_token", "summary": "Delete Token", "parameters": [{"in": "query", "name": "deleted_key", "schema": {"default": "", "title": "Deleted Key", "type": "string"}, "required": false}, {"in": "query", "name": "tokens", "schema": {"description": "list of tokens to be deleted", "items": {"type": "string"}, "title": "Tokens", "type": "array"}, "required": false, "description": "list of tokens to be deleted"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_SoftDeletedRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Delete(invalidate) tokens by their IDs.", "tags": ["Authorization"], "security": [{"GlobalAuth": []}]}}, "/base/user/token/{token_id}": {"put": {"operationId": "coinfer_apis_base_api_modify_token", "summary": "Update a token by its ID.", "parameters": [{"in": "path", "name": "token_id", "schema": {"title": "Token Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_GetTokensRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Modify various property of a token.", "tags": ["Authorization"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ModifyToken"}}}, "required": true}, "security": [{"GlobalAuth": []}]}}, "/base/code2token": {"post": {"operationId": "coinfer_apis_base_api_code2token", "summary": "Code2Token", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Code2TokenRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Exchange code for access token.", "tags": ["Authorization"], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"title": "FormParams", "type": "object", "properties": {"code": {"title": "Code", "type": "string"}}, "required": ["code"]}}}, "required": true}, "security": [{"GlobalAuth": []}]}}, "/base/access_token": {"get": {"operationId": "coinfer_apis_base_api_access_token", "summary": "Access Token", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Code2TokenRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Get access token.", "tags": ["Authorization"], "security": [{"GlobalAuth": []}]}}, "/base/linked-account": {"get": {"operationId": "coinfer_apis_base_api_list_linked_account", "summary": "List Linked Account", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_ListLinkedAccountRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Get list of linked account.", "tags": ["Authorization"], "security": [{"GlobalAuth": []}]}, "delete": {"operationId": "coinfer_apis_base_api_delete_linked_account", "summary": "Delete Linked Account", "parameters": [{"in": "query", "name": "deleted_key", "schema": {"default": "", "title": "Deleted Key", "type": "string"}, "required": false}, {"in": "query", "name": "accounts", "schema": {"description": "account list. List item in format `<account_type>:<account>`", "items": {"type": "string"}, "title": "Accounts", "type": "array"}, "required": false, "description": "account list. List item in format `<account_type>:<account>`"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_SoftDeletedRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Delete linked accounts.", "tags": ["Authorization"], "security": [{"GlobalAuth": []}]}}, "/api/notification": {"get": {"operationId": "coinfer_apis_notification_api_get_notification", "summary": "Get notification messsages", "parameters": [{"in": "query", "name": "page_no", "schema": {"default": 1, "description": "page number", "exclusiveMinimum": 0, "title": "Page No", "type": "integer"}, "required": false, "description": "page number"}, {"in": "query", "name": "page_size", "schema": {"default": 100, "description": "page size", "exclusiveMinimum": 0, "maximum": 1000, "title": "Page Size", "type": "integer"}, "required": false, "description": "page size"}, {"in": "query", "name": "status", "schema": {"description": "Filter the notification message by read status", "enum": ["all", "read", "unread"], "title": "Status", "type": "string"}, "required": true, "description": "Filter the notification message by read status"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_ListingRspData_NotificationDict__"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Get notification messages targeting the current user.", "tags": ["Notification"], "security": [{"GlobalAuth": []}]}}, "/api/notification/mark": {"post": {"operationId": "coinfer_apis_notification_api_mark_notification_read", "summary": "Mark notification messsage as already read", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_NoneType_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Mark some notification as having been read by user.\nListing messages support filtering by read mark.", "tags": ["Notification"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MarkNotificationReadReq"}}}, "required": true}, "security": [{"GlobalAuth": []}]}}, "/api/object": {"get": {"operationId": "coinfer_apis_unified_api_list_object", "summary": "List objects.", "parameters": [{"in": "query", "name": "page_no", "schema": {"default": 1, "description": "page number", "exclusiveMinimum": 0, "title": "Page No", "type": "integer"}, "required": false, "description": "page number"}, {"in": "query", "name": "page_size", "schema": {"default": 100, "description": "page size", "exclusiveMinimum": 0, "maximum": 1000, "title": "Page Size", "type": "integer"}, "required": false, "description": "page size"}, {"in": "query", "name": "object_type", "schema": {"enum": ["model", "experiment", "share", "event", "callback", "relation", ""], "title": "Object Type", "type": "string"}, "required": true}, {"in": "query", "name": "with_share_info", "schema": {"default": false, "description": "Whether to return the related share info", "title": "With Share Info", "type": "boolean"}, "required": false, "description": "Whether to return the related share info"}, {"in": "query", "name": "shared_by_me", "schema": {"default": false, "description": "Filter objects shared by the current user", "title": "Shared By Me", "type": "boolean"}, "required": false, "description": "Filter objects shared by the current user"}, {"in": "query", "name": "shared_with_me", "schema": {"default": false, "description": "Filter objects shared with the current user", "title": "Shared With Me", "type": "boolean"}, "required": false, "description": "Filter objects shared with the current user"}, {"in": "query", "name": "model_ids", "schema": {"items": {"type": "string"}, "title": "Model Ids", "type": "array"}, "required": false}, {"in": "query", "name": "status", "schema": {"default": "", "enum": ["NEW", "RUN", "FIN", "ERR", ""], "title": "Status", "type": "string"}, "required": false}, {"in": "query", "name": "run_on", "schema": {"default": "", "enum": ["Lambda", "Fargate", "Local", ""], "title": "Run On", "type": "string"}, "required": false}, {"in": "query", "name": "has_model", "schema": {"default": "", "enum": ["true", "false", ""], "title": "Has Model", "type": "string"}, "required": false}, {"in": "query", "name": "tags", "schema": {"description": "Filter by tags", "items": {"description": "All possible tags for cloudfunctions\n\nIncluding: CloudFunctionManagedTag and CloudFunctionKind", "enum": ["internal", "builtin", "reserved", "model", "code"], "title": "CloudFunctionTag", "type": "string"}, "title": "Tags", "type": "array"}, "required": false, "description": "Filter by tags"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_ListingRspData_Union_ListExperimentRsp__ListModelsRspItem__CreateEventRsp__CreateCallbackRsp__CreateRelationRsp___"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "### List Objects\n\nBy default, the API returns only objects created by the current user, excluding sharing\ninformation for performance optimization.\n\nWhen `shared_with_me` is enabled, the API returns objects owned by other users but\nshared with the current user, including their sharing details.\n\nEnabling `shared_by_me` will include sharing information for objects that the current\nuser has shared with others.\n\nSetting `with_share_info` to true combines both scenarios: it returns objects shared\nby the current user as well as objects shared with the current user, complete with\ntheir respective sharing information. This effectively merges the functionality of\nboth `shared_by_me` and `shared_with_me`.\n\n### Example\n\nList models:\n```\nGET /api/object?object_type=model\nGET /api/object?object_type=model&shared_by_me=true\nGET /api/object?object_type=model&shared_with_me=true\nGET /api/object?object_type=model&with_share_info=true\n```\n\nList experiments:\n```\nGET /api/object?object_type=experiment\nGET /api/object?object_type=experiment&shared_by_me=true\nGET /api/object?object_type=experiment&shared_with_me=true\nGET /api/object?object_type=experiment&with_share_info=true\n```", "tags": ["Object"], "security": [{"GlobalAuth": []}]}, "post": {"operationId": "coinfer_apis_unified_api_create_object", "summary": "Create new object.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Annotated_Union_ExperimentRsp__ListModelsRspItem__CreateExperimentShareRsp__CreateEventRsp__CreateCallbackRsp__CreateRelationRsp___FieldInfo_annotation_NoneType__required_True__discriminator__object_type____"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Create new object.\n\n### Example\nCreate model:\n```\nPOST /api/object\n{\n    \"payload\": {\n        \"object_type\": \"model\",\n        \"name\": \"model name\",\n        \"type\": \"local\",\n        \"content\": {\n            \"meta\": {\"entrance_file\": \"main.jl\"},\n            \"tree\": [],\n        }\n    }\n}\n```\n\nCreate model from GitHub repo:\n```\nPOST /api/object\n{\n    \"payload\": {\n        \"object_type\": \"model\",\n        \"repo\": \"vectorly-ai/simple-model\",\n        \"branch\": \"main\",\n        \"type\": \"repo\",\n    }\n}\n```\n\nCreate model from GitHub gist:\n```\nPOST /api/object\n{\n    \"payload\": {\n        \"object_type\": \"model\",\n        \"repo\": \"<the-gist-id>\",\n        \"type\": \"gist\",\n    }\n}\n```\n\nCreate experiment:\n```\nPOST /api/object\n{\n    \"payload\": {\n        \"object_type\": \"experiment\",\n        \"name\": \"experiment name\",\n        \"model_id\": \"M1234567\",\n    }\n}\n```\n\nCreate share of experiment:\n```\nPOST /api/object\n{\n    \"payload\": {\n        \"object_type\": \"share\",\n        \"objid\": \"X1234567\",\n        \"password\": \"the-pass\",\n    }\n}\n```", "tags": ["Object"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateObjectReq"}}}, "required": true}, "security": [{"GlobalAuth": []}]}, "delete": {"operationId": "coinfer_apis_unified_api_delete_object", "summary": "Delete objects.", "parameters": [{"in": "query", "name": "objids", "schema": {"description": "list of object ids", "items": {"type": "string"}, "title": "Objids", "type": "array"}, "required": false, "description": "list of object ids"}, {"in": "query", "name": "deleted_key", "schema": {"default": "", "title": "Deleted Key", "type": "string"}, "required": false}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_SoftDeletedRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Delete objects of certain IDs in batch.\n\n### Example\n\n```\nDELETE /api/object?objids=M1234567&objids=X1234567\n```", "tags": ["Object"], "security": [{"GlobalAuth": []}]}}, "/api/object/{objid}": {"get": {"operationId": "coinfer_apis_unified_api_view_object", "summary": "View object.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}, {"in": "query", "name": "object_type", "schema": {"default": "", "enum": ["model", "experiment", "share", "event", "callback", "relation", ""], "title": "Object Type", "type": "string"}, "required": false}, {"in": "query", "name": "share_id", "schema": {"default": "", "description": "\n                Only appicable to object_type == model or object_type == experiment\n                If this field is empty, returns the latest version of the objects.\n                otherwise returns the specified share snapshot", "title": "Share Id", "type": "string"}, "required": false, "description": "\n                Only appicable to object_type == model or object_type == experiment\n                If this field is empty, returns the latest version of the objects.\n                otherwise returns the specified share snapshot"}, {"in": "query", "name": "sampledata", "schema": {"default": false, "title": "Sampledata", "type": "boolean"}, "required": false}, {"in": "query", "name": "fmt", "schema": {"default": "csv", "enum": ["csv", "grist", "arviz"], "title": "Fmt", "type": "string"}, "required": false}, {"in": "query", "name": "cloudwatch_log", "schema": {"default": false, "title": "Cloudwatch Log", "type": "boolean"}, "required": false}, {"in": "query", "name": "batch_id", "schema": {"default": "", "title": "Batch Id", "type": "string"}, "required": false}, {"in": "query", "name": "run_id", "schema": {"default": "", "title": "Run Id", "type": "string"}, "required": false}, {"in": "query", "name": "plot", "schema": {"default": false, "description": "get arviz plot", "title": "Plot", "type": "boolean"}, "required": false, "description": "get arviz plot"}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Annotated_Union_ExperimentRsp__ViewModelsRsp__ViewExperimentShareRsp__ExperimentSampleDataRsp__ExperimentCloudwatchLogRsp__GetExperimentRunInfoRsp__ExperimentPlotRsp___FieldInfo_annotation_NoneType__required_True__discriminator__object_type____"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "View object of certain ID.\n\n### Example\n\n```\nGET /api/object/M1234567  # view model data\nGET /api/object/X1234567  # view experiment data\nGET /api/object/S1234566  # view share data\n```", "tags": ["Object"], "security": [{"SharingAuth": []}, {"GlobalAuth": []}]}, "post": {"operationId": "coinfer_apis_unified_api_update_object", "summary": "Update object.", "parameters": [{"in": "path", "name": "objid", "schema": {"title": "Objid", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_Union_ExperimentRsp__ViewModelsRsp__NoneType__"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "Update object of certain ID.\n\n### Example\n\nUpdate model:\n```\nPOST /api/object/M1234567\n\n{\n    \"payload\": {\n        \"object_type\": \"model\",\n        \"name\": \"model name\",\n        \"content\": {\n            \"meta\": {\"entrance_file\": \"main.jl\"},\n            \"tree\": [],\n        }\n    }\n}\n```\n\nUpdate experiment:\n```\nPOST /api/object/X1234567\n\n{\n    \"payload\": {\n        \"object_type\": \"experiment\",\n        \"name\": \"experiment name\",\n    }\n}\n```", "tags": ["Object"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateObject"}}}, "required": true}, "security": [{"GlobalAuth": []}]}}, "/api/object/share/{share_id}": {"get": {"operationId": "coinfer_apis_no_auth_api_get_experiment_share", "summary": "Get sharing information of an experiment.", "parameters": [{"in": "path", "name": "share_id", "schema": {"title": "Share Id", "type": "string"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_GetExperimentShareRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "tags": ["Share"]}}, "/sys/config": {"get": {"operationId": "coinfer_apis_system_api_config", "summary": "Get configuration about how to run a model.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_GetConfigRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "description": "This API is used to get the configuration about how to run a model. Currently the\nconfiguration includes the URL of the proxy lambda function which is used to\nrun the model.", "tags": ["System"], "security": [{"GlobalAuth": []}]}}, "/sys/gallery": {"get": {"operationId": "coinfer_apis_system_api_repository", "summary": "List gallery data.", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccRsp_DemoListRsp_"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrRsp"}}}}}, "tags": ["System"], "security": [{"GlobalAuth": []}]}}}, "components": {"schemas": {"Auth0ConfigRsp": {"properties": {"Domain": {"title": "Domain", "type": "string"}, "ClientID": {"title": "Clientid", "type": "string"}}, "required": ["Domain", "ClientID"], "title": "Auth0ConfigRsp", "type": "object"}, "SuccRsp_Auth0ConfigRsp_": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"$ref": "#/components/schemas/Auth0ConfigRsp"}}, "required": ["status", "data"], "title": "SuccRsp[Auth0ConfigRsp]", "type": "object"}, "Auth0LoginRsp": {"properties": {"tokens": {"items": {"type": "string"}, "title": "Tokens", "type": "array"}}, "required": ["tokens"], "title": "Auth0LoginRsp", "type": "object"}, "SuccRsp_Auth0LoginRsp_": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"$ref": "#/components/schemas/Auth0LoginRsp"}}, "required": ["status", "data"], "title": "SuccRsp[Auth0LoginRsp]", "type": "object"}, "SuccRsp_UserLoginRsp_": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"$ref": "#/components/schemas/UserLoginRsp"}}, "required": ["status", "data"], "title": "SuccRsp[UserLoginRsp]", "type": "object"}, "UserLoginRsp": {"properties": {"tokens": {"items": {"type": "string"}, "title": "Tokens", "type": "array"}}, "required": ["tokens"], "title": "UserLoginRsp", "type": "object"}, "ErrRsp": {"properties": {"status": {"const": "error", "title": "Status", "type": "string"}, "code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["status", "code", "message"], "title": "ErrRsp", "type": "object"}, "UserLogin": {"properties": {"username": {"title": "Username", "type": "string"}, "password": {"title": "Password", "type": "string"}}, "required": ["username", "password"], "title": "UserLogin", "type": "object"}, "SuccRsp_UserInfoRsp_": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"$ref": "#/components/schemas/UserInfoRsp"}}, "required": ["status", "data"], "title": "SuccRsp[UserInfoRsp]", "type": "object"}, "UserInfoRsp": {"properties": {"id": {"title": "Id", "type": "integer"}, "username": {"title": "Username", "type": "string"}, "super": {"title": "Super", "type": "boolean"}, "roles": {"items": {"type": "string"}, "title": "Roles", "type": "array"}, "is_github_user": {"title": "Is Github User", "type": "boolean"}}, "required": ["id", "username", "super", "roles", "is_github_user"], "title": "UserInfoRsp", "type": "object"}, "ModifyCurrentUser": {"properties": {"new_password": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "New Password"}, "password": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Password"}}, "title": "ModifyCurrentUser", "type": "object"}, "SuccRsp_NoneType_": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"title": "Data", "type": "null"}}, "required": ["status", "data"], "title": "SuccRsp[NoneType]", "type": "object"}, "GetTokensRsp": {"properties": {"id": {"title": "Id", "type": "integer"}, "token": {"title": "Token", "type": "string"}, "token_name": {"title": "Token Name", "type": "string"}, "token_desc": {"title": "Token Desc", "type": "string"}, "token_expire": {"examples": ["2025-02-11T23:56:09.473Z"], "format": "date-time", "title": "Token Expire", "type": "string"}}, "required": ["id", "token", "token_name", "token_desc", "token_expire"], "title": "GetTokensRsp", "type": "object"}, "SuccRsp_list_GetTokensRsp__": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"items": {"$ref": "#/components/schemas/GetTokensRsp"}, "title": "Data", "type": "array"}}, "required": ["status", "data"], "title": "SuccRsp[list[GetTokensRsp]]", "type": "object"}, "SuccRsp_GetTokensRsp_": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"$ref": "#/components/schemas/GetTokensRsp"}}, "required": ["status", "data"], "title": "SuccRsp[GetTokensRsp]", "type": "object"}, "CreateToken": {"properties": {"name": {"default": "", "title": "Name", "type": "string"}, "desc": {"default": "", "title": "Desc", "type": "string"}, "expire": {"examples": ["2025-02-11T23:56:09.473Z"], "format": "date-time", "title": "Expire", "type": "string"}}, "title": "CreateToken", "type": "object"}, "DeleteTokenReq": {"properties": {"deleted_key": {"default": "", "title": "Deleted Key", "type": "string"}, "tokens": {"description": "list of tokens to be deleted", "items": {"type": "string"}, "title": "Tokens", "type": "array"}}, "title": "DeleteTokenReq", "type": "object"}, "SoftDeletedRsp": {"properties": {"deleted_key": {"anyOf": [{"format": "uuid", "type": "string"}, {"type": "null"}], "description": "The deleted_key if deleting objects; None if undoing deletes", "title": "Deleted Key"}}, "required": ["deleted_key"], "title": "SoftDeletedRsp", "type": "object"}, "SuccRsp_SoftDeletedRsp_": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"$ref": "#/components/schemas/SoftDeletedRsp"}}, "required": ["status", "data"], "title": "SuccRsp[SoftDeletedRsp]", "type": "object"}, "ModifyToken": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}, "desc": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Desc"}, "expire": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Expire"}}, "title": "ModifyToken", "type": "object"}, "Code2TokenRsp": {"properties": {"access_token": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Access Token"}}, "required": ["access_token"], "title": "Code2TokenRsp", "type": "object"}, "SuccRsp_Code2TokenRsp_": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"$ref": "#/components/schemas/Code2TokenRsp"}}, "required": ["status", "data"], "title": "SuccRsp[Code2TokenRsp]", "type": "object"}, "ListLinkedAccountRsp": {"properties": {"linked_accounts": {"items": {"$ref": "#/components/schemas/_LinkedAccountSchema"}, "title": "Linked Accounts", "type": "array"}}, "required": ["linked_accounts"], "title": "ListLinkedAccountRsp", "type": "object"}, "SuccRsp_ListLinkedAccountRsp_": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"$ref": "#/components/schemas/ListLinkedAccountRsp"}}, "required": ["status", "data"], "title": "SuccRsp[ListLinkedAccountRsp]", "type": "object"}, "_LinkedAccountSchema": {"properties": {"account": {"title": "Account", "type": "string"}, "type": {"title": "Type", "type": "string"}}, "required": ["account", "type"], "title": "_LinkedAccountSchema", "type": "object"}, "DeleteLinkedAccountReq": {"properties": {"deleted_key": {"default": "", "title": "Deleted Key", "type": "string"}, "accounts": {"description": "account list. List item in format `<account_type>:<account>`", "items": {"type": "string"}, "title": "Accounts", "type": "array"}}, "title": "DeleteLinkedAccountReq", "type": "object"}, "GetNotificationReq": {"properties": {"page_no": {"default": 1, "description": "page number", "exclusiveMinimum": 0, "title": "Page No", "type": "integer"}, "page_size": {"default": 100, "description": "page size", "exclusiveMinimum": 0, "maximum": 1000, "title": "Page Size", "type": "integer"}, "status": {"description": "Filter the notification message by read status", "enum": ["all", "read", "unread"], "title": "Status", "type": "string"}}, "required": ["status"], "title": "GetNotificationReq", "type": "object"}, "ListingRspData_NotificationDict_": {"properties": {"total": {"title": "Total", "type": "integer"}, "page": {"title": "Page", "type": "integer"}, "count_per_page": {"title": "Count Per Page", "type": "integer"}, "objects": {"items": {"$ref": "#/components/schemas/NotificationDict"}, "title": "Objects", "type": "array"}}, "required": ["total", "page", "count_per_page", "objects"], "title": "ListingRspData[NotificationDict]", "type": "object"}, "NotificationDict": {"properties": {"id": {"title": "Id", "type": "integer"}, "event": {"title": "Event", "type": "string"}, "title": {"title": "Title", "type": "string"}, "message": {"title": "Message", "type": "string"}, "msg_object": {"title": "Msg Object", "type": "string"}, "msg_verb": {"title": "Msg Verb", "type": "string"}, "created_at": {"title": "Created At", "type": "string"}, "read_at": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Read At"}}, "required": ["id", "event", "title", "message", "msg_object", "msg_verb", "created_at", "read_at"], "title": "NotificationDict", "type": "object"}, "SuccRsp_ListingRspData_NotificationDict__": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"$ref": "#/components/schemas/ListingRspData_NotificationDict_"}}, "required": ["status", "data"], "title": "SuccRsp[ListingRspData[NotificationDict]]", "type": "object"}, "MarkNotificationReadReq": {"properties": {"notification_ids": {"items": {"type": "integer"}, "title": "Notification Ids", "type": "array"}, "status": {"description": "the target status to be set", "enum": ["read", "unread"], "title": "Status", "type": "string"}}, "required": ["status"], "title": "MarkNotificationReadReq", "type": "object"}, "CloudFunctionTag": {"description": "All possible tags for cloudfunctions\n\nIncluding: CloudFunctionManagedTag and CloudFunctionKind", "enum": ["internal", "builtin", "reserved", "model", "code"], "title": "CloudFunctionTag", "type": "string"}, "ListObjectTmp": {"properties": {"payload": {"$ref": "#/components/schemas/_ListObjectTmp"}}, "required": ["payload"], "title": "ListObjectTmp", "type": "object"}, "_ListObjectTmp": {"properties": {"page_no": {"default": 1, "description": "page number", "exclusiveMinimum": 0, "title": "Page No", "type": "integer"}, "page_size": {"default": 100, "description": "page size", "exclusiveMinimum": 0, "maximum": 1000, "title": "Page Size", "type": "integer"}, "object_type": {"enum": ["model", "experiment", "share", "event", "callback", "relation", ""], "title": "Object Type", "type": "string"}, "with_share_info": {"default": false, "description": "Whether to return the related share info", "title": "With Share Info", "type": "boolean"}, "shared_by_me": {"default": false, "description": "Filter objects shared by the current user", "title": "Shared By Me", "type": "boolean"}, "shared_with_me": {"default": false, "description": "Filter objects shared with the current user", "title": "Shared With Me", "type": "boolean"}, "model_ids": {"items": {"type": "string"}, "title": "Model Ids", "type": "array"}, "status": {"default": "", "enum": ["NEW", "RUN", "FIN", "ERR", ""], "title": "Status", "type": "string"}, "run_on": {"default": "", "enum": ["Lambda", "Fargate", "Local", ""], "title": "Run On", "type": "string"}, "has_model": {"default": "", "enum": ["true", "false", ""], "title": "Has Model", "type": "string"}, "tags": {"description": "Filter by tags", "items": {"description": "All possible tags for cloudfunctions\n\nIncluding: CloudFunctionManagedTag and CloudFunctionKind", "enum": ["internal", "builtin", "reserved", "model", "code"], "title": "CloudFunctionTag", "type": "string"}, "title": "Tags", "type": "array"}}, "required": ["object_type"], "title": "_ListObjectTmp", "type": "object"}, "CreateCallbackRsp": {"properties": {"object_type": {"const": "callback", "title": "Object Type", "type": "string"}, "short_id": {"title": "Short Id", "type": "string"}, "lang": {"title": "Lang", "type": "string"}, "code": {"title": "Code", "type": "string"}, "token": {"title": "Token", "type": "string"}, "created_at": {"format": "date-time", "title": "Created At", "type": "string"}}, "required": ["object_type", "short_id", "lang", "code", "token", "created_at"], "title": "CreateCallbackRsp", "type": "object"}, "CreateEventRsp": {"properties": {"object_type": {"const": "event", "title": "Object Type", "type": "string"}, "name": {"title": "Name", "type": "string"}, "short_id": {"title": "Short Id", "type": "string"}, "created_at": {"format": "date-time", "title": "Created At", "type": "string"}}, "required": ["object_type", "name", "short_id", "created_at"], "title": "CreateEventRsp", "type": "object"}, "CreateRelationRsp": {"properties": {"object_type": {"const": "relation", "title": "Object Type", "type": "string"}, "short_id": {"title": "Short Id", "type": "string"}, "user_id": {"title": "User Id", "type": "integer"}, "object1_id": {"title": "Object1 Id", "type": "string"}, "object2_id": {"title": "Object2 Id", "type": "string"}, "created_at": {"format": "date-time", "title": "Created At", "type": "string"}}, "required": ["object_type", "short_id", "user_id", "object1_id", "object2_id", "created_at"], "title": "CreateRelationRsp", "type": "object"}, "ListExperimentRsp": {"properties": {"short_id": {"title": "Short Id", "type": "string"}, "name": {"title": "Name", "type": "string"}, "model_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Model Id"}, "status": {"title": "Status", "type": "string"}, "meta": {"anyOf": [{"$ref": "#/components/schemas/_MetaModel"}, {"type": "null"}]}, "n_chains": {"title": "N Chains", "type": "integer"}, "n_variables": {"title": "N Variables", "type": "integer"}, "n_samples": {"title": "N Samples", "type": "integer"}, "sample_update_time": {"format": "date-time", "title": "Sample Update Time", "type": "string"}, "run_on": {"title": "Run On", "type": "string"}, "share_info": {"anyOf": [{"items": {"$ref": "#/components/schemas/_ShareInfoModel"}, "type": "array"}, {"type": "null"}], "title": "Share Info"}, "model_name": {"title": "Model Name", "type": "string"}}, "required": ["short_id", "name", "status", "n_chains", "n_variables", "n_samples", "sample_update_time", "run_on", "model_name"], "title": "ListExperimentRsp", "type": "object"}, "ListModelsRspItem": {"properties": {"object_type": {"const": "model", "title": "Object Type", "type": "string"}, "id": {"title": "Id", "type": "integer"}, "short_id": {"title": "Short Id", "type": "string"}, "name": {"title": "Name", "type": "string"}, "content": {"title": "Content"}, "meta": {"$ref": "#/components/schemas/_ModelMetaInRsp"}, "tags": {"items": {"type": "string"}, "title": "Tags", "type": "array"}, "lambda_image_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": "", "title": "Lambda Image Url"}, "lambda_image_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": "", "title": "Lambda Image Name"}}, "required": ["object_type", "id", "short_id", "name", "meta", "tags"], "title": "ListModelsRspItem", "type": "object"}, "ListingRspData_Union_ListExperimentRsp__ListModelsRspItem__CreateEventRsp__CreateCallbackRsp__CreateRelationRsp__": {"properties": {"total": {"title": "Total", "type": "integer"}, "page": {"title": "Page", "type": "integer"}, "count_per_page": {"title": "Count Per Page", "type": "integer"}, "objects": {"items": {"anyOf": [{"$ref": "#/components/schemas/ListExperimentRsp"}, {"$ref": "#/components/schemas/ListModelsRspItem"}, {"$ref": "#/components/schemas/CreateEventRsp"}, {"$ref": "#/components/schemas/CreateCallbackRsp"}, {"$ref": "#/components/schemas/CreateRelationRsp"}]}, "title": "Objects", "type": "array"}}, "required": ["total", "page", "count_per_page", "objects"], "title": "ListingRspData[Union[ListExperimentRsp, ListModelsRspItem, CreateEventRsp, CreateCallbackRsp, CreateRelationRsp]]", "type": "object"}, "SuccRsp_ListingRspData_Union_ListExperimentRsp__ListModelsRspItem__CreateEventRsp__CreateCallbackRsp__CreateRelationRsp___": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"$ref": "#/components/schemas/ListingRspData_Union_ListExperimentRsp__ListModelsRspItem__CreateEventRsp__CreateCallbackRsp__CreateRelationRsp__"}}, "required": ["status", "data"], "title": "SuccRsp[ListingRspData[Union[ListExperimentRsp, ListModelsRspItem, CreateEventRsp, CreateCallbackRsp, CreateRelationRsp]]]", "type": "object"}, "_MetaModel": {"properties": {"action": {"default": "", "title": "Action", "type": "string"}, "iteration_count": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Iteration Count"}}, "title": "_MetaModel", "type": "object"}, "_ModelMetaInRsp": {"properties": {"github": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Github"}, "commit_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Commit Id"}, "origin_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Origin Url"}, "fixed_version_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Fixed Version Url"}}, "title": "_ModelMetaInRsp", "type": "object"}, "_ShareInfoModel": {"properties": {"id": {"title": "Id", "type": "integer"}, "password": {"title": "Password", "type": "string"}, "user_id": {"title": "User Id", "type": "string"}, "short_id": {"title": "Short Id", "type": "string"}, "to_user_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "To User Id"}}, "required": ["id", "password", "user_id", "short_id"], "title": "_ShareInfoModel", "type": "object"}, "CreateExperimentShareRsp": {"properties": {"object_type": {"const": "share", "title": "Object Type", "type": "string"}, "id": {"title": "Id", "type": "integer"}, "user_id": {"title": "User Id", "type": "integer"}, "short_id": {"title": "Short Id", "type": "string"}, "experiment_id": {"title": "Experiment Id", "type": "string"}, "experiment_name": {"title": "Experiment Name", "type": "string"}, "password": {"title": "Password", "type": "string"}, "created_at": {"format": "date-time", "title": "Created At", "type": "string"}, "from_user": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "From User"}, "to_user": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "To User"}}, "required": ["object_type", "id", "user_id", "short_id", "experiment_id", "experiment_name", "password", "created_at"], "title": "CreateExperimentShareRsp", "type": "object"}, "ExperimentRsp": {"properties": {"object_type": {"const": "experiment", "title": "Object Type", "type": "string"}, "short_id": {"default": "", "title": "Short Id", "type": "string"}, "name": {"default": "", "title": "Name", "type": "string"}, "model_id": {"default": "", "title": "Model Id", "type": "string"}, "status": {"default": "", "title": "Status", "type": "string"}, "meta": {"title": "Meta"}, "n_chains": {"default": 0, "title": "N Chains", "type": "integer"}, "n_variables": {"default": 0, "title": "N Variables", "type": "integer"}, "n_samples": {"default": 0, "title": "N Samples", "type": "integer"}, "sample_update_time": {"default": "", "format": "date-time", "title": "Sample Update Time", "type": "string"}, "run_on": {"default": "", "title": "Run On", "type": "string"}, "input": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Input"}, "output": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Output"}, "share_info": {"anyOf": [{"items": {"$ref": "#/components/schemas/_ShareInfoModel"}, "type": "array"}, {"type": "null"}], "title": "Share Info"}, "model_name": {"title": "Model Name", "type": "string"}}, "required": ["object_type", "model_name"], "title": "ExperimentRsp", "type": "object"}, "SuccRsp_Annotated_Union_ExperimentRsp__ListModelsRspItem__CreateExperimentShareRsp__CreateEventRsp__CreateCallbackRsp__CreateRelationRsp___FieldInfo_annotation_NoneType__required_True__discriminator__object_type____": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"discriminator": {"mapping": {"callback": "#/components/schemas/CreateCallbackRsp", "event": "#/components/schemas/CreateEventRsp", "experiment": "#/components/schemas/ExperimentRsp", "model": "#/components/schemas/ListModelsRspItem", "relation": "#/components/schemas/CreateRelationRsp", "share": "#/components/schemas/CreateExperimentShareRsp"}, "propertyName": "object_type"}, "oneOf": [{"$ref": "#/components/schemas/ExperimentRsp"}, {"$ref": "#/components/schemas/ListModelsRspItem"}, {"$ref": "#/components/schemas/CreateExperimentShareRsp"}, {"$ref": "#/components/schemas/CreateEventRsp"}, {"$ref": "#/components/schemas/CreateCallbackRsp"}, {"$ref": "#/components/schemas/CreateRelationRsp"}], "title": "Data"}}, "required": ["status", "data"], "title": "SuccRsp[Annotated[Union[ExperimentRsp, ListModelsRspItem, CreateExperimentShareRsp, CreateEventRsp, CreateCallbackRsp, CreateRelationRsp], FieldInfo(annotation=NoneType, required=True, discriminator='object_type')]]", "type": "object"}, "CloudFunctionKind": {"description": "Categories (types) of cloud functions, e.g., MODEL or CODE.\nThese categories are also used as tags elsewhere in the system.", "enum": ["model", "code"], "title": "CloudFunctionKind", "type": "string"}, "CloudFunctionLang": {"enum": ["python", "julia"], "title": "CloudFunctionLang", "type": "string"}, "CreateCallbackReq": {"properties": {"object_type": {"const": "callback", "title": "Object Type", "type": "string"}, "lang": {"enum": ["julia", "python"], "title": "Lang", "type": "string"}, "code": {"description": "code location specification. Can be:\n1. GitHub gist: gist:<gist-id>:<entrance-file>\n2. GitHub repo: repo:<repo-owner>/<repo-name>:<entrance-file>", "title": "Code", "type": "string"}, "single_instance": {"default": true, "description": "Only allow one instance of this callback to run at a time.", "title": "Single Instance", "type": "boolean"}}, "required": ["object_type", "lang", "code"], "title": "CreateCallbackReq", "type": "object"}, "CreateEventReq": {"properties": {"object_type": {"const": "event", "title": "Object Type", "type": "string"}, "name": {"title": "Name", "type": "string"}}, "required": ["object_type", "name"], "title": "CreateEventReq", "type": "object"}, "CreateExperiment": {"properties": {"object_type": {"const": "experiment", "title": "Object Type", "type": "string"}, "model_id": {"default": "", "title": "Model Id", "type": "string"}, "xp_meta": {"title": "Xp Meta"}, "meta": {"title": "Meta"}, "name": {"default": "", "title": "Name", "type": "string"}, "run_on": {"default": "Lambda", "enum": ["Lambda", "Fargate", "Local"], "title": "Run On", "type": "string"}, "data_file_type": {"anyOf": [{"enum": ["turing csv", "stan csv", "arviz netcdf"], "type": "string"}, {"type": "null"}], "title": "Data File Type"}, "data_files": {"description": "File data in text format", "items": {"type": "string"}, "title": "Data Files", "type": "array"}, "data_uris": {"description": "File data URI", "items": {"type": "string"}, "title": "Data Uris", "type": "array"}}, "required": ["object_type"], "title": "CreateExperiment", "type": "object"}, "CreateExperimentShare": {"properties": {"object_type": {"const": "share", "title": "Object Type", "type": "string"}, "objid": {"title": "Objid", "type": "string"}, "password": {"default": "", "title": "Password", "type": "string"}, "target_user": {"default": "", "title": "Target User", "type": "string"}}, "required": ["object_type", "objid"], "title": "CreateExperimentShare", "type": "object"}, "CreateModel": {"properties": {"object_type": {"const": "model", "title": "Object Type", "type": "string"}, "type": {"default": "local", "description": "The type of input code. It can be:\n\n* local: the code is provided directly in `content` field as Unified Model Format.\n* url: the code is provided by a URL and specified by param `source_url`.", "enum": ["local", "url"], "title": "Type", "type": "string"}, "env": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Env"}, "name": {"default": "", "description": "model name", "title": "Name", "type": "string"}, "content": {"anyOf": [{"$ref": "#/components/schemas/ModelContent"}, {"type": "null"}]}, "is_demo": {"default": false, "title": "Is Demo", "type": "boolean"}, "tag": {"allOf": [{"$ref": "#/components/schemas/CloudFunctionKind"}], "default": "model"}, "single_instance": {"default": true, "description": "Only allow one instance to run as cloud function at a time.", "title": "Single Instance", "type": "boolean"}, "lang": {"allOf": [{"$ref": "#/components/schemas/CloudFunctionLang"}], "default": "julia"}, "entrance_file": {"default": "", "title": "Entrance File", "type": "string"}, "lambda_image": {"default": false, "description": "Whether to build lambda image for this CloudFunction", "title": "Lambda Image", "type": "boolean"}, "source_url": {"default": "", "description": "Source URL from where to import the model", "title": "Source Url", "type": "string"}}, "required": ["object_type"], "title": "CreateModel", "type": "object"}, "CreateObjectReq": {"properties": {"payload": {"discriminator": {"mapping": {"callback": "#/components/schemas/CreateCallbackReq", "event": "#/components/schemas/CreateEventReq", "experiment": "#/components/schemas/CreateExperiment", "model": "#/components/schemas/CreateModel", "relation": "#/components/schemas/CreateRelationReq", "share": "#/components/schemas/CreateExperimentShare"}, "propertyName": "object_type"}, "oneOf": [{"$ref": "#/components/schemas/CreateModel"}, {"$ref": "#/components/schemas/CreateExperiment"}, {"$ref": "#/components/schemas/CreateExperimentShare"}, {"$ref": "#/components/schemas/CreateEventReq"}, {"$ref": "#/components/schemas/CreateCallbackReq"}, {"$ref": "#/components/schemas/CreateRelationReq"}], "title": "Payload"}}, "required": ["payload"], "title": "CreateObjectReq", "type": "object"}, "CreateRelationReq": {"properties": {"object_type": {"const": "relation", "title": "Object Type", "type": "string"}, "object1_id": {"title": "Object1 Id", "type": "string"}, "object2_id": {"title": "Object2 Id", "type": "string"}}, "required": ["object_type", "object1_id", "object2_id"], "title": "CreateRelationReq", "type": "object"}, "ModelContent": {"properties": {"meta": {"allOf": [{"$ref": "#/components/schemas/ModelMeta"}]}, "tree": {"items": {"$ref": "#/components/schemas/ModelTreeNode"}, "title": "Tree", "type": "array"}}, "title": "ModelContent", "type": "object"}, "ModelMeta": {"properties": {"project_file": {"default": "Project.toml", "title": "Project File", "type": "string"}, "entrance_file": {"default": "main.jl", "title": "Entrance File", "type": "string"}, "entrance_func": {"default": "model", "title": "Entrance Func", "type": "string"}, "manifest": {"default": "Manifest.toml", "title": "Manifest", "type": "string"}}, "title": "ModelMeta", "type": "object"}, "ModelTreeNode": {"properties": {"name": {"title": "Name", "type": "string"}, "type": {"enum": ["file", "folder"], "title": "Type", "type": "string"}, "content": {"default": "", "title": "Content", "type": "string"}, "children": {"default": [], "items": {"$ref": "#/components/schemas/ModelTreeNode"}, "title": "Children", "type": "array"}}, "required": ["name", "type"], "title": "ModelTreeNode", "type": "object"}, "DeleteObject": {"properties": {"objids": {"description": "list of object ids", "items": {"type": "string"}, "title": "Objids", "type": "array"}, "deleted_key": {"default": "", "title": "Deleted Key", "type": "string"}}, "title": "DeleteObject", "type": "object"}, "ViewObject": {"properties": {"object_type": {"default": "", "enum": ["model", "experiment", "share", "event", "callback", "relation", ""], "title": "Object Type", "type": "string"}, "share_id": {"default": "", "description": "\n                Only appicable to object_type == model or object_type == experiment\n                If this field is empty, returns the latest version of the objects.\n                otherwise returns the specified share snapshot", "title": "Share Id", "type": "string"}, "sampledata": {"default": false, "title": "Sampledata", "type": "boolean"}, "fmt": {"default": "csv", "enum": ["csv", "grist", "arviz"], "title": "Fmt", "type": "string"}, "cloudwatch_log": {"default": false, "title": "Cloudwatch Log", "type": "boolean"}, "batch_id": {"default": "", "title": "Batch Id", "type": "string"}, "run_id": {"default": "", "title": "Run Id", "type": "string"}, "plot": {"default": false, "description": "get arviz plot", "title": "Plot", "type": "boolean"}}, "title": "ViewObject", "type": "object"}, "ViewObjectTmp": {"properties": {"payload": {"$ref": "#/components/schemas/ViewObject"}}, "required": ["payload"], "title": "ViewObjectTmp", "type": "object"}, "ExperimentCloudwatchLogRsp": {"properties": {"object_type": {"const": "experiment.cloudwatch_log", "title": "Object Type", "type": "string"}, "logs": {"items": {"maxItems": 2, "minItems": 2, "prefixItems": [{"type": "integer"}, {"type": "string"}], "type": "array"}, "title": "Logs", "type": "array"}}, "required": ["object_type", "logs"], "title": "ExperimentCloudwatchLogRsp", "type": "object"}, "ExperimentPlotRsp": {"properties": {"object_type": {"const": "experiment.plot", "title": "Object Type", "type": "string"}, "url": {"title": "Url", "type": "string"}}, "required": ["object_type", "url"], "title": "ExperimentPlotRsp", "type": "object"}, "ExperimentSampleDataRsp": {"properties": {"object_type": {"const": "experiment.sampledata", "title": "Object Type", "type": "string"}, "url": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Url"}, "progress": {"title": "Progress", "type": "string"}, "message": {"default": "", "title": "Message", "type": "string"}}, "required": ["object_type", "url", "progress"], "title": "ExperimentSampleDataRsp", "type": "object"}, "GetExperimentRunInfoRsp": {"properties": {"object_type": {"const": "experiment.run_info", "title": "Object Type", "type": "string"}, "status": {"title": "Status", "type": "string"}}, "required": ["object_type", "status"], "title": "GetExperimentRunInfoRsp", "type": "object"}, "SuccRsp_Annotated_Union_ExperimentRsp__ViewModelsRsp__ViewExperimentShareRsp__ExperimentSampleDataRsp__ExperimentCloudwatchLogRsp__GetExperimentRunInfoRsp__ExperimentPlotRsp___FieldInfo_annotation_NoneType__required_True__discriminator__object_type____": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"discriminator": {"mapping": {"experiment": "#/components/schemas/ExperimentRsp", "experiment.cloudwatch_log": "#/components/schemas/ExperimentCloudwatchLogRsp", "experiment.plot": "#/components/schemas/ExperimentPlotRsp", "experiment.run_info": "#/components/schemas/GetExperimentRunInfoRsp", "experiment.sampledata": "#/components/schemas/ExperimentSampleDataRsp", "model": "#/components/schemas/ViewModelsRsp", "share": "#/components/schemas/ViewExperimentShareRsp"}, "propertyName": "object_type"}, "oneOf": [{"$ref": "#/components/schemas/ExperimentRsp"}, {"$ref": "#/components/schemas/ViewModelsRsp"}, {"$ref": "#/components/schemas/ViewExperimentShareRsp"}, {"$ref": "#/components/schemas/ExperimentSampleDataRsp"}, {"$ref": "#/components/schemas/ExperimentCloudwatchLogRsp"}, {"$ref": "#/components/schemas/GetExperimentRunInfoRsp"}, {"$ref": "#/components/schemas/ExperimentPlotRsp"}], "title": "Data"}}, "required": ["status", "data"], "title": "SuccRsp[Annotated[Union[ExperimentRsp, ViewModelsRsp, ViewExperimentShareRsp, ExperimentSampleDataRsp, ExperimentCloudwatchLogRsp, GetExperimentRunInfoRsp, ExperimentPlotRsp], FieldInfo(annotation=NoneType, required=True, discriminator='object_type')]]", "type": "object"}, "ViewExperimentShareRsp": {"properties": {"object_type": {"const": "share", "title": "Object Type", "type": "string"}, "require_password": {"title": "Require Password", "type": "boolean"}}, "required": ["object_type", "require_password"], "title": "ViewExperimentShareRsp", "type": "object"}, "ViewModelsRsp": {"properties": {"object_type": {"const": "model", "title": "Object Type", "type": "string"}, "id": {"title": "Id", "type": "integer"}, "short_id": {"title": "Short Id", "type": "string"}, "name": {"title": "Name", "type": "string"}, "content": {"title": "Content"}, "meta": {"$ref": "#/components/schemas/_ModelMetaInRsp"}, "tags": {"items": {"type": "string"}, "title": "Tags", "type": "array"}, "lambda_image_url": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": "", "title": "Lambda Image Url"}, "lambda_image_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": "", "title": "Lambda Image Name"}}, "required": ["object_type", "id", "short_id", "name", "meta", "tags"], "title": "ViewModelsRsp", "type": "object"}, "SuccRsp_Union_ExperimentRsp__ViewModelsRsp__NoneType__": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"anyOf": [{"$ref": "#/components/schemas/ExperimentRsp"}, {"$ref": "#/components/schemas/ViewModelsRsp"}, {"type": "null"}], "title": "Data"}}, "required": ["status", "data"], "title": "SuccRsp[Union[ExperimentRsp, ViewModelsRsp, NoneType]]", "type": "object"}, "CreateNSampleStatReq": {"properties": {"object_type": {"const": "experiment.nsample_stat", "title": "Object Type", "type": "string"}, "batch_id": {"title": "Batch Id", "type": "string"}, "run_id": {"title": "Run Id", "type": "string"}, "chain_name": {"title": "Chain Name", "type": "string"}, "n_sample": {"title": "N Sample", "type": "integer"}, "stat": {"additionalProperties": {"maxItems": 2, "minItems": 2, "prefixItems": [{"type": "string"}, {"type": "number"}], "type": "array"}, "title": "Stat", "type": "object"}}, "required": ["object_type", "batch_id", "run_id", "chain_name", "n_sample", "stat"], "title": "CreateNSampleStatReq", "type": "object"}, "CreateProtobufMessageReq": {"properties": {"object_type": {"const": "experiment.protobuf_message", "title": "Object Type", "type": "string"}, "batch_id": {"title": "Batch Id", "type": "string"}, "run_id": {"title": "Run Id", "type": "string"}, "logs": {"items": {"$ref": "#/components/schemas/DataTyping"}, "title": "Logs", "type": "array"}}, "required": ["object_type", "batch_id", "run_id", "logs"], "title": "CreateProtobufMessageReq", "type": "object"}, "CreateTextMessageReq": {"properties": {"object_type": {"const": "experiment.text_message", "title": "Object Type", "type": "string"}, "datas": {"description": "list of messages", "items": {"additionalProperties": true, "type": "object"}, "title": "Datas", "type": "array"}, "batch_id": {"title": "Batch Id", "type": "string"}, "run_id": {"title": "Run Id", "type": "string"}}, "required": ["object_type", "datas", "batch_id", "run_id"], "title": "CreateTextMessageReq", "type": "object"}, "DataTyping": {"properties": {"chain_name": {"title": "Chain Name", "type": "string"}, "iteration": {"title": "Iteration", "type": "integer"}, "data": {"items": {"additionalProperties": true, "type": "object"}, "title": "Data", "type": "array"}}, "required": ["chain_name", "iteration"], "title": "DataTyping", "type": "object"}, "RunCloudFunctionScript": {"properties": {"object_type": {"const": "model.run_script", "title": "Object Type", "type": "string"}, "params": {"default": "", "title": "Params", "type": "string"}, "engine": {"default": "lambda", "enum": ["lambda", "fargate"], "title": "Engine", "type": "string"}, "lock_key": {"default": "", "title": "Lock Key", "type": "string"}}, "required": ["object_type"], "title": "RunCloudFunctionScript", "type": "object"}, "UpdateEventReq": {"properties": {"object_type": {"const": "event", "title": "Object Type", "type": "string"}, "params": {"default": "", "title": "Params", "type": "string"}, "engine": {"default": "lambda", "enum": ["lambda", "fargate"], "title": "Engine", "type": "string"}, "lock_key": {"default": "", "title": "Lock Key", "type": "string"}}, "required": ["object_type"], "title": "UpdateEventReq", "type": "object"}, "UpdateExperiment": {"properties": {"object_type": {"const": "experiment", "title": "Object Type", "type": "string"}, "action": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Action"}, "meta": {"additionalProperties": true, "title": "Meta", "type": "object"}, "status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "n_chains": {"default": 0, "title": "N Chains", "type": "integer"}, "n_variables": {"default": 0, "title": "N Variables", "type": "integer"}, "n_samples": {"default": 0, "title": "N Samples", "type": "integer"}, "sample_update_time": {"anyOf": [{"format": "date-time", "type": "string"}, {"type": "null"}], "title": "Sample Update Time"}, "name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}}, "required": ["object_type"], "title": "UpdateExperiment", "type": "object"}, "UpdateModel": {"properties": {"object_type": {"const": "model", "title": "Object Type", "type": "string"}, "content": {"anyOf": [{"$ref": "#/components/schemas/ModelContent"}, {"type": "null"}]}, "name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}, "version": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Version"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Status"}, "lambda_image": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Lambda Image"}}, "required": ["object_type"], "title": "UpdateModel", "type": "object"}, "UpdateObject": {"properties": {"payload": {"discriminator": {"mapping": {"event": "#/components/schemas/UpdateEventReq", "experiment": "#/components/schemas/UpdateExperiment", "experiment.nsample_stat": "#/components/schemas/CreateNSampleStatReq", "experiment.protobuf_message": "#/components/schemas/CreateProtobufMessageReq", "experiment.text_message": "#/components/schemas/CreateTextMessageReq", "model": "#/components/schemas/UpdateModel", "model.run_script": "#/components/schemas/RunCloudFunctionScript"}, "propertyName": "object_type"}, "oneOf": [{"$ref": "#/components/schemas/CreateNSampleStatReq"}, {"$ref": "#/components/schemas/UpdateModel"}, {"$ref": "#/components/schemas/RunCloudFunctionScript"}, {"$ref": "#/components/schemas/UpdateExperiment"}, {"$ref": "#/components/schemas/UpdateEventReq"}, {"$ref": "#/components/schemas/CreateTextMessageReq"}, {"$ref": "#/components/schemas/CreateProtobufMessageReq"}], "title": "Payload"}}, "required": ["payload"], "title": "UpdateObject", "type": "object"}, "GetExperimentShareRsp": {"properties": {"require_password": {"title": "Require Password", "type": "boolean"}}, "required": ["require_password"], "title": "GetExperimentShareRsp", "type": "object"}, "SuccRsp_GetExperimentShareRsp_": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"$ref": "#/components/schemas/GetExperimentShareRsp"}}, "required": ["status", "data"], "title": "SuccRsp[GetExperimentShareRsp]", "type": "object"}, "GetConfigRsp": {"properties": {"run_model_url": {"title": "Run Model Url", "type": "string"}, "max_upload_sample_size": {"title": "Max Upload Sample Size", "type": "integer"}, "max_upload_sample_file": {"title": "Max Upload Sample File", "type": "integer"}, "upload_file_types": {"title": "Upload File Types", "type": "string"}, "google_client_id": {"title": "Google Client Id", "type": "string"}, "google_app_id": {"title": "Google App Id", "type": "string"}}, "required": ["run_model_url", "max_upload_sample_size", "max_upload_sample_file", "upload_file_types", "google_client_id", "google_app_id"], "title": "GetConfigRsp", "type": "object"}, "SuccRsp_GetConfigRsp_": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"$ref": "#/components/schemas/GetConfigRsp"}}, "required": ["status", "data"], "title": "SuccRsp[GetConfigRsp]", "type": "object"}, "DemoListRsp": {"properties": {"models": {"additionalProperties": {"items": {"$ref": "#/components/schemas/_DemoListItem"}, "type": "array"}, "title": "Models", "type": "object"}, "MCMC": {"additionalProperties": {"items": {"$ref": "#/components/schemas/_DemoListItem"}, "type": "array"}, "title": "Mcmc", "type": "object"}}, "required": ["models", "MCMC"], "title": "DemoListRsp", "type": "object"}, "SuccRsp_DemoListRsp_": {"properties": {"status": {"const": "ok", "title": "Status", "type": "string"}, "data": {"$ref": "#/components/schemas/DemoListRsp"}}, "required": ["status", "data"], "title": "SuccRsp[DemoListRsp]", "type": "object"}, "_DemoListItem": {"properties": {"name": {"title": "Name", "type": "string"}, "url": {"items": {"type": "string"}, "title": "Url", "type": "array"}}, "required": ["name", "url"], "title": "_DemoListItem", "type": "object"}}, "securitySchemes": {"GlobalAuth": {"type": "http", "scheme": "bearer"}, "SharingAuth": {"type": "apiKey", "in": "header", "name": "X-Share-Password"}}}, "servers": [{"url": "https://api.coinfer.ai", "description": "The production environment"}, {"url": "https://dev.coinfer.ai", "description": "The development environment"}], "tags": [{"name": "Object", "description": "APIs related to object CRUD operations."}, {"name": "System", "description": "APIs related to system functionality."}, {"name": "Share", "description": "APIs related to model/experiment sharing."}, {"name": "Notification", "description": "APIs related to notification."}, {"name": "Authorization", "description": "APIs related to user, token, login, etc.\n\nNormally API's in this group should not be used. You should get API token from our website and then use the token to call other APIs."}]}